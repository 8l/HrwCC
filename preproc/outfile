# linked executable code generated by HRWCC

.section .text

call 11204
pushl %eax
call exit


# .globl	preproc_reportError [@3]
# .type	preproc_reportError,@function
# preproc_reportError	:	 [@3]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21,%esp

	movl	20(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	11
	movl	$0,%eax
# preproc_reportError_reltrue_1	:	 [@11]
	testl	%eax,%eax
	jnz	14
	jmp	21
# preproc_reportError_ifbl_0	:	 [@14]

	subl	$8,%esp
	movl	$11334,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp
	jmp	27
# preproc_reportError_elsebl_0	:	 [@21]

	subl	$8,%esp
	movl	$11355,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp
# preproc_reportError_endif_0	:	 [@27]

	movl	$0,-17(%ebp)

	movl	16(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	33
	movl	$0,%eax
# preproc_reportError_reltrue_3	:	 [@33]
	testl	%eax,%eax
	jnz	36
	jmp	225
# preproc_reportError_ifbl_2	:	 [@36]

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	pushl	$0
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$1,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	11176
	addl	$8,%esp
	movl	%eax,-17(%ebp)

	movl	-17(%ebp),%eax
	testl	%eax,%eax
	jnz	79
	jmp	104
# preproc_reportError_ifbl_4	:	 [@79]

	subl	$8,%esp
	movl	$11374,0(%esp)
	movl	-17(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$11379,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$5,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$11383,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$9,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp
	jmp	122
# preproc_reportError_elsebl_4	:	 [@104]

	subl	$8,%esp
	movl	$11389,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$5,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$11383,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$9,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp
# preproc_reportError_endif_4	:	 [@122]

	movl	$0,-21(%ebp)

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	pushl	-21(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# preproc_reportError_while_5	:	 [@151]
	pushl	-21(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	162
	movl	$0,%eax
# preproc_reportError_reltrue_7	:	 [@162]
	testl	%eax,%eax
	jz	178
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	174
	movl	$0,%eax
# preproc_reportError_reltrue_8	:	 [@174]
	testl	%eax,%eax
	jz	178
	movl	$1,%eax
	jmp	179
# preproc_reportError_logtermfalse_6	:	 [@178]
	movl	$0,%eax
# preproc_reportError_logtermtrue_6	:	 [@179]
	testl	%eax,%eax
	jz	224

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	pushl	-21(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$8,%esp
	movl	$11407,0(%esp)
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	movl	-21(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-21(%ebp)
	jmp	151
# preproc_reportError_endwhile_5	:	 [@224]
	jmp	225
# preproc_reportError_elsebl_2	:	 [@225]
# preproc_reportError_endif_2	:	 [@225]

	subl	$4,%esp
	movl	$11410,0(%esp)
	call	puts
	addl	$4,%esp
# preproc_reportError_ret	:	 [@229]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	preproc_reportError_s [@232]
# .type	preproc_reportError_s,@function
# preproc_reportError_s	:	 [@232]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	20(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	240
	movl	$0,%eax
# preproc_reportError_s_reltrue_10	:	 [@240]
	testl	%eax,%eax
	jnz	243
	jmp	249
# preproc_reportError_s_ifbl_9	:	 [@243]

	subl	$8,%esp
	movl	$11412,0(%esp)
	movl	$11431,4(%esp)
	call	printf
	addl	$8,%esp
	jmp	254
# preproc_reportError_s_elsebl_9	:	 [@249]

	subl	$8,%esp
	movl	$11433,0(%esp)
	movl	$11431,4(%esp)
	call	printf
	addl	$8,%esp
# preproc_reportError_s_endif_9	:	 [@254]

	movl	16(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	259
	movl	$0,%eax
# preproc_reportError_s_reltrue_12	:	 [@259]
	testl	%eax,%eax
	jnz	262
	jmp	274
# preproc_reportError_s_ifbl_11	:	 [@262]

	subl	$8,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	$11450,0(%esp)
	call	puts
	addl	$4,%esp
	jmp	279
# preproc_reportError_s_elsebl_11	:	 [@274]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	puts
	addl	$4,%esp
# preproc_reportError_s_endif_11	:	 [@279]
# preproc_reportError_s_ret	:	 [@279]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isPreprocError [@282]
# .type	isPreprocError,@function
# isPreprocError	:	 [@282]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	pushl	8(%ebp)
	movl	$0,%ebx
	subl	$10000,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jg	294
	movl	$0,%eax
# isPreprocError_reltrue_15	:	 [@294]
	testl	%eax,%eax
	jz	309
	pushl	8(%ebp)
	movl	$0,%ebx
	subl	$10499,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	305
	movl	$0,%eax
# isPreprocError_reltrue_16	:	 [@305]
	testl	%eax,%eax
	jz	309
	movl	$1,%eax
	jmp	310
# isPreprocError_logtermfalse_14	:	 [@309]
	movl	$0,%eax
# isPreprocError_logtermtrue_14	:	 [@310]
	testl	%eax,%eax
	jnz	313
	jmp	315
# isPreprocError_ifbl_13	:	 [@313]

	movl	$1,%eax
	jmp	317
# isPreprocError_elsebl_13	:	 [@315]
# isPreprocError_endif_13	:	 [@315]

	movl	$0,%eax
	jmp	317
# isPreprocError_ret	:	 [@317]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isPreprocWarning [@320]
# .type	isPreprocWarning,@function
# isPreprocWarning	:	 [@320]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	pushl	8(%ebp)
	movl	$0,%ebx
	subl	$10500,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jg	332
	movl	$0,%eax
# isPreprocWarning_reltrue_19	:	 [@332]
	testl	%eax,%eax
	jz	347
	pushl	8(%ebp)
	movl	$0,%ebx
	subl	$10999,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	343
	movl	$0,%eax
# isPreprocWarning_reltrue_20	:	 [@343]
	testl	%eax,%eax
	jz	347
	movl	$1,%eax
	jmp	348
# isPreprocWarning_logtermfalse_18	:	 [@347]
	movl	$0,%eax
# isPreprocWarning_logtermtrue_18	:	 [@348]
	testl	%eax,%eax
	jnz	351
	jmp	353
# isPreprocWarning_ifbl_17	:	 [@351]

	movl	$1,%eax
	jmp	355
# isPreprocWarning_elsebl_17	:	 [@353]
# isPreprocWarning_endif_17	:	 [@353]

	movl	$0,%eax
	jmp	355
# isPreprocWarning_ret	:	 [@355]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	initLine [@358]
# .type	initLine,@function
# initLine	:	 [@358]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$6676,8(%esp)
	call	memset
	addl	$12,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6668,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6672,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# initLine_ret	:	 [@398]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	updateLineProperties [@401]
# .type	updateLineProperties,@function
# updateLineProperties	:	 [@401]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$13,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jg	420
	movl	$0,%eax
# updateLineProperties_reltrue_22	:	 [@420]
	testl	%eax,%eax
	jnz	423
	jmp	424
# updateLineProperties_ifbl_21	:	 [@423]

	jmp	537
# updateLineProperties_elsebl_21	:	 [@424]
# updateLineProperties_endif_21	:	 [@424]

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6668,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	467
	movl	$0,%eax
# updateLineProperties_reltrue_24	:	 [@467]
	testl	%eax,%eax
	jnz	470
	jmp	511
# updateLineProperties_ifbl_23	:	 [@470]

	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$34,%ebx
	movl	$1,%eax
	je	480
	movl	$0,%eax
# updateLineProperties_reltrue_26	:	 [@480]
	testl	%eax,%eax
	jnz	483
	jmp	510
# updateLineProperties_ifbl_25	:	 [@483]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	493
	movl	$0,%eax
# updateLineProperties_reltrue_28	:	 [@493]
	testl	%eax,%eax
	jnz	496
	jmp	503
# updateLineProperties_ifbl_27	:	 [@496]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	509
# updateLineProperties_elsebl_27	:	 [@503]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	%eax,%ebx
	movl	$1,(%ebx)
# updateLineProperties_endif_27	:	 [@509]
	jmp	510
# updateLineProperties_elsebl_25	:	 [@510]
# updateLineProperties_endif_25	:	 [@510]
	jmp	511
# updateLineProperties_elsebl_23	:	 [@511]
# updateLineProperties_endif_23	:	 [@511]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6668,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$92,%ebx
	movl	$1,%eax
	je	527
	movl	$0,%eax
# updateLineProperties_reltrue_30	:	 [@527]
	testl	%eax,%eax
	jnz	530
	jmp	537
# updateLineProperties_ifbl_29	:	 [@530]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6668,%eax
	movl	%eax,%ebx
	movl	$1,(%ebx)
	jmp	537
# updateLineProperties_elsebl_29	:	 [@537]
# updateLineProperties_endif_29	:	 [@537]
# updateLineProperties_ret	:	 [@537]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	disposeWhitespace [@540]
# .type	disposeWhitespace,@function
# disposeWhitespace	:	 [@540]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$13,%esp

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# disposeWhitespace_while_31	:	 [@576]
	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isblank
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	590
	movl	$0,%eax
# disposeWhitespace_reltrue_34	:	 [@590]
	testl	%eax,%eax
	jnz	606
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	602
	movl	$0,%eax
# disposeWhitespace_reltrue_35	:	 [@602]
	testl	%eax,%eax
	jnz	606
	movl	$0,%eax
	jmp	607
# disposeWhitespace_logexprtrue_33	:	 [@606]
	movl	$1,%eax
# disposeWhitespace_logexprfalse_33	:	 [@607]
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	612
	movl	$0,%eax
# disposeWhitespace_reltrue_32	:	 [@612]
	testl	%eax,%eax
	jz	677

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	672
	movl	$0,%eax
# disposeWhitespace_reltrue_37	:	 [@672]
	testl	%eax,%eax
	jnz	675
	jmp	676
# disposeWhitespace_ifbl_36	:	 [@675]
	jmp	677
# disposeWhitespace_elsebl_36	:	 [@676]
# disposeWhitespace_endif_36	:	 [@676]
	jmp	576
# disposeWhitespace_endwhile_31	:	 [@677]
# disposeWhitespace_ret	:	 [@677]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	disposeRestOfLine [@680]
# .type	disposeRestOfLine,@function
# disposeRestOfLine	:	 [@680]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
# disposeRestOfLine_ret	:	 [@698]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	prevstage_getNext [@701]
# .type	prevstage_getNext,@function
# prevstage_getNext	:	 [@701]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	12(%ebp),%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,12(%ebp)

	movl	12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	713
	movl	$0,%eax
# prevstage_getNext_reltrue_39	:	 [@713]
	testl	%eax,%eax
	jnz	716
	jmp	724
# prevstage_getNext_ifbl_38	:	 [@716]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	call	10688
	addl	$8,%esp
	jmp	780
# prevstage_getNext_elsebl_38	:	 [@724]
# prevstage_getNext_endif_38	:	 [@724]

	movl	12(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	729
	movl	$0,%eax
# prevstage_getNext_reltrue_41	:	 [@729]
	testl	%eax,%eax
	jnz	732
	jmp	740
# prevstage_getNext_ifbl_40	:	 [@732]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	call	8572
	addl	$8,%esp
	jmp	780
# prevstage_getNext_elsebl_40	:	 [@740]
# prevstage_getNext_endif_40	:	 [@740]

	movl	12(%ebp),%ebx
	cmpl	$3,%ebx
	movl	$1,%eax
	je	745
	movl	$0,%eax
# prevstage_getNext_reltrue_43	:	 [@745]
	testl	%eax,%eax
	jnz	748
	jmp	756
# prevstage_getNext_ifbl_42	:	 [@748]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	call	3856
	addl	$8,%esp
	jmp	780
# prevstage_getNext_elsebl_42	:	 [@756]
# prevstage_getNext_endif_42	:	 [@756]

	movl	12(%ebp),%ebx
	cmpl	$2,%ebx
	movl	$1,%eax
	je	761
	movl	$0,%eax
# prevstage_getNext_reltrue_45	:	 [@761]
	testl	%eax,%eax
	jnz	764
	jmp	772
# prevstage_getNext_ifbl_44	:	 [@764]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	call	7990
	addl	$8,%esp
	jmp	780
# prevstage_getNext_elsebl_44	:	 [@772]
# prevstage_getNext_endif_44	:	 [@772]

	subl	$4,%esp
	movl	$11451,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	$1,0(%esp)
	call	exit
	addl	$4,%esp
# prevstage_getNext_ret	:	 [@780]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getNextLine [@783]
# .type	getNextLine,@function
# getNextLine	:	 [@783]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21,%esp

	subl	$4,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	call	358
	addl	$4,%esp

	movl	$0,-8(%ebp)

# getNextLine_while_46	:	 [@792]
	pushl	-8(%ebp)
	movl	$512,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	801
	movl	$0,%eax
# getNextLine_reltrue_47	:	 [@801]
	testl	%eax,%eax
	jz	892

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	movl	%eax,8(%esp)
	call	701
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	825
	movl	$0,%eax
# getNextLine_reltrue_49	:	 [@825]
	testl	%eax,%eax
	jnz	828
	jmp	830
# getNextLine_ifbl_48	:	 [@828]

	movl	-4(%ebp),%eax
	jmp	919
# getNextLine_elsebl_48	:	 [@830]
# getNextLine_endif_48	:	 [@830]

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-21,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-21,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	883
	movl	$0,%eax
# getNextLine_reltrue_51	:	 [@883]
	testl	%eax,%eax
	jnz	886
	jmp	887
# getNextLine_ifbl_50	:	 [@886]
	jmp	892
# getNextLine_elsebl_50	:	 [@887]
# getNextLine_endif_50	:	 [@887]

	movl	-8(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)
	jmp	792
# getNextLine_endwhile_46	:	 [@892]

	pushl	-8(%ebp)
	movl	$512,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	901
	movl	$0,%eax
# getNextLine_reltrue_53	:	 [@901]
	testl	%eax,%eax
	jnz	904
	jmp	917
# getNextLine_ifbl_52	:	 [@904]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11480,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	919
# getNextLine_elsebl_52	:	 [@917]
# getNextLine_endif_52	:	 [@917]

	movl	$0,%eax
	jmp	919
# getNextLine_ret	:	 [@919]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	disposeMultilineSatement [@922]
# .type	disposeMultilineSatement,@function
# disposeMultilineSatement	:	 [@922]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$30,%esp

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# disposeMultilineSatement_while_54	:	 [@994]
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$92,%ebx
	movl	$1,%eax
	je	1004
	movl	$0,%eax
# disposeMultilineSatement_reltrue_56	:	 [@1004]
	testl	%eax,%eax
	jz	1020
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	1016
	movl	$0,%eax
# disposeMultilineSatement_reltrue_57	:	 [@1016]
	testl	%eax,%eax
	jz	1020
	movl	$1,%eax
	jmp	1021
# disposeMultilineSatement_logtermfalse_55	:	 [@1020]
	movl	$0,%eax
# disposeMultilineSatement_logtermtrue_55	:	 [@1021]
	testl	%eax,%eax
	jz	1113

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1038
	movl	$0,%eax
# disposeMultilineSatement_reltrue_59	:	 [@1038]
	testl	%eax,%eax
	jnz	1041
	jmp	1043
# disposeMultilineSatement_ifbl_58	:	 [@1041]

	movl	-4(%ebp),%eax
	jmp	1115
# disposeMultilineSatement_elsebl_58	:	 [@1043]
# disposeMultilineSatement_endif_58	:	 [@1043]

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	994
# disposeMultilineSatement_endwhile_54	:	 [@1113]

	movl	$0,%eax
	jmp	1115
# disposeMultilineSatement_ret	:	 [@1115]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	printCharacters [@1118]
# .type	printCharacters,@function
# printCharacters	:	 [@1118]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# printCharacters_while_60	:	 [@1149]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1159
	movl	$0,%eax
# printCharacters_reltrue_61	:	 [@1159]
	testl	%eax,%eax
	jz	1203

	subl	$8,%esp
	movl	$11407,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1149
# printCharacters_endwhile_60	:	 [@1203]
# printCharacters_ret	:	 [@1203]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterStrCmp [@1206]
# .type	CharacterStrCmp,@function
# CharacterStrCmp	:	 [@1206]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	12(%ebp),%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterStrCmp_while_62	:	 [@1240]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1250
	movl	$0,%eax
# CharacterStrCmp_reltrue_64	:	 [@1250]
	testl	%eax,%eax
	jz	1261
	movl	-4(%ebp),%ebx
	cmpl	16(%ebp),%ebx
	movl	$1,%eax
	jl	1257
	movl	$0,%eax
# CharacterStrCmp_reltrue_65	:	 [@1257]
	testl	%eax,%eax
	jz	1261
	movl	$1,%eax
	jmp	1262
# CharacterStrCmp_logtermfalse_63	:	 [@1261]
	movl	$0,%eax
# CharacterStrCmp_logtermtrue_63	:	 [@1262]
	testl	%eax,%eax
	jz	1323

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	popl	%esi
	addl	%esi,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	1283
	movl	$0,%eax
# CharacterStrCmp_reltrue_67	:	 [@1283]
	testl	%eax,%eax
	jnz	1286
	jmp	1288
# CharacterStrCmp_ifbl_66	:	 [@1286]

	movl	$1,%eax
	jmp	1325
# CharacterStrCmp_elsebl_66	:	 [@1288]
# CharacterStrCmp_endif_66	:	 [@1288]

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	12(%ebp),%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1240
# CharacterStrCmp_endwhile_62	:	 [@1323]

	movl	$0,%eax
	jmp	1325
# CharacterStrCmp_ret	:	 [@1325]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterSubCmp [@1328]
# .type	CharacterSubCmp,@function
# CharacterSubCmp	:	 [@1328]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$30,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	12(%ebp),%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterSubCmp_while_68	:	 [@1389]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1399
	movl	$0,%eax
# CharacterSubCmp_reltrue_70	:	 [@1399]
	testl	%eax,%eax
	jz	1410
	movl	-4(%ebp),%ebx
	cmpl	16(%ebp),%ebx
	movl	$1,%eax
	jl	1406
	movl	$0,%eax
# CharacterSubCmp_reltrue_71	:	 [@1406]
	testl	%eax,%eax
	jz	1410
	movl	$1,%eax
	jmp	1411
# CharacterSubCmp_logtermfalse_69	:	 [@1410]
	movl	$0,%eax
# CharacterSubCmp_logtermtrue_69	:	 [@1411]
	testl	%eax,%eax
	jz	1496

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	1429
	movl	$0,%eax
# CharacterSubCmp_reltrue_73	:	 [@1429]
	testl	%eax,%eax
	jnz	1432
	jmp	1434
# CharacterSubCmp_ifbl_72	:	 [@1432]

	movl	$1,%eax
	jmp	1498
# CharacterSubCmp_elsebl_72	:	 [@1434]
# CharacterSubCmp_endif_72	:	 [@1434]

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	12(%ebp),%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1389
# CharacterSubCmp_endwhile_68	:	 [@1496]

	movl	$0,%eax
	jmp	1498
# CharacterSubCmp_ret	:	 [@1498]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterCmp [@1501]
# .type	CharacterCmp,@function
# CharacterCmp	:	 [@1501]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$30,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterCmp_while_74	:	 [@1559]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	1575
	movl	$0,%eax
# CharacterCmp_reltrue_76	:	 [@1575]
	testl	%eax,%eax
	jz	1591
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1587
	movl	$0,%eax
# CharacterCmp_reltrue_77	:	 [@1587]
	testl	%eax,%eax
	jz	1591
	movl	$1,%eax
	jmp	1592
# CharacterCmp_logtermfalse_75	:	 [@1591]
	movl	$0,%eax
# CharacterCmp_logtermtrue_75	:	 [@1592]
	testl	%eax,%eax
	jz	1653

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1559
# CharacterCmp_endwhile_74	:	 [@1653]

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	popl	%ebx
	subl	%eax,%ebx
	movl	%ebx,%eax
	jmp	1668
# CharacterCmp_ret	:	 [@1668]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterLen [@1671]
# .type	CharacterLen,@function
# CharacterLen	:	 [@1671]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterLen_while_78	:	 [@1702]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1712
	movl	$0,%eax
# CharacterLen_reltrue_79	:	 [@1712]
	testl	%eax,%eax
	jz	1746

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1702
# CharacterLen_endwhile_78	:	 [@1746]

	movl	-4(%ebp),%eax
	jmp	1748
# CharacterLen_ret	:	 [@1748]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterCpy [@1751]
# .type	CharacterCpy,@function
# CharacterCpy	:	 [@1751]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterCpy_while_80	:	 [@1782]
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1792
	movl	$0,%eax
# CharacterCpy_reltrue_81	:	 [@1792]
	testl	%eax,%eax
	jz	1858

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1782
# CharacterCpy_endwhile_80	:	 [@1858]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	$0,%eax
	jmp	1892
# CharacterCpy_ret	:	 [@1892]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	CharacterCat [@1895]
# .type	CharacterCat,@function
# CharacterCat	:	 [@1895]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-21,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterCat_while_82	:	 [@1926]
	movl	%ebp,%eax
	addl	$-21,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	1936
	movl	$0,%eax
# CharacterCat_reltrue_83	:	 [@1936]
	testl	%eax,%eax
	jz	1970

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-21,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1926
# CharacterCat_endwhile_82	:	 [@1970]

	movl	$0,-8(%ebp)

	movl	%ebp,%eax
	addl	$-21,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# CharacterCat_while_84	:	 [@1998]
	movl	%ebp,%eax
	addl	$-21,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	2008
	movl	$0,%eax
# CharacterCat_reltrue_85	:	 [@2008]
	testl	%eax,%eax
	jz	2078

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	-8(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)

	movl	%ebp,%eax
	addl	$-21,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	1998
# CharacterCat_endwhile_84	:	 [@2078]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	$0,%eax
	jmp	2112
# CharacterCat_ret	:	 [@2112]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isMacroDefined [@2115]
# .type	isMacroDefined,@function
# isMacroDefined	:	 [@2115]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	call	4524
	addl	$4,%esp
	movl	%eax,-4(%ebp)

# isMacroDefined_while_86	:	 [@2127]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	2132
	movl	$0,%eax
# isMacroDefined_reltrue_87	:	 [@2132]
	testl	%eax,%eax
	jz	2161

	subl	$8,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,4(%esp)
	call	1501
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2149
	movl	$0,%eax
# isMacroDefined_reltrue_89	:	 [@2149]
	testl	%eax,%eax
	jnz	2152
	jmp	2154
# isMacroDefined_ifbl_88	:	 [@2152]

	movl	$1,%eax
	jmp	2163
# isMacroDefined_elsebl_88	:	 [@2154]
# isMacroDefined_endif_88	:	 [@2154]

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	4548
	addl	$4,%esp
	movl	%eax,-4(%ebp)
	jmp	2127
# isMacroDefined_endwhile_86	:	 [@2161]

	movl	$0,%eax
	jmp	2163
# isMacroDefined_ret	:	 [@2163]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getNextIdentifier [@2166]
# .type	getNextIdentifier,@function
# getNextIdentifier	:	 [@2166]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# getNextIdentifier_while_90	:	 [@2203]
	movl	-4(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	jl	2208
	movl	$0,%eax
# getNextIdentifier_reltrue_91	:	 [@2208]
	testl	%eax,%eax
	jz	2381

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2215
	movl	$0,%eax
# getNextIdentifier_reltrue_93	:	 [@2215]
	testl	%eax,%eax
	jnz	2218
	jmp	2255
# getNextIdentifier_ifbl_92	:	 [@2218]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isalpha
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2232
	movl	$0,%eax
# getNextIdentifier_reltrue_96	:	 [@2232]
	testl	%eax,%eax
	jz	2248
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$95,%ebx
	movl	$1,%eax
	jne	2244
	movl	$0,%eax
# getNextIdentifier_reltrue_97	:	 [@2244]
	testl	%eax,%eax
	jz	2248
	movl	$1,%eax
	jmp	2249
# getNextIdentifier_logtermfalse_95	:	 [@2248]
	movl	$0,%eax
# getNextIdentifier_logtermtrue_95	:	 [@2249]
	testl	%eax,%eax
	jnz	2252
	jmp	2254
# getNextIdentifier_ifbl_94	:	 [@2252]

	movl	$1,%eax
	jmp	2383
# getNextIdentifier_elsebl_94	:	 [@2254]
# getNextIdentifier_endif_94	:	 [@2254]
	jmp	2290
# getNextIdentifier_elsebl_92	:	 [@2255]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isalnum
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2269
	movl	$0,%eax
# getNextIdentifier_reltrue_100	:	 [@2269]
	testl	%eax,%eax
	jz	2285
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$95,%ebx
	movl	$1,%eax
	jne	2281
	movl	$0,%eax
# getNextIdentifier_reltrue_101	:	 [@2281]
	testl	%eax,%eax
	jz	2285
	movl	$1,%eax
	jmp	2286
# getNextIdentifier_logtermfalse_99	:	 [@2285]
	movl	$0,%eax
# getNextIdentifier_logtermtrue_99	:	 [@2286]
	testl	%eax,%eax
	jnz	2289
	jmp	2290
# getNextIdentifier_ifbl_98	:	 [@2289]
	jmp	2381
# getNextIdentifier_elsebl_98	:	 [@2290]
# getNextIdentifier_endif_98	:	 [@2290]
# getNextIdentifier_endif_92	:	 [@2290]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	2203
# getNextIdentifier_endwhile_90	:	 [@2381]

	movl	$0,%eax
	jmp	2383
# getNextIdentifier_ret	:	 [@2383]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getNextParamValue [@2386]
# .type	getNextParamValue,@function
# getNextParamValue	:	 [@2386]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$38,%esp

	movl	$0,-4(%ebp)

	movl	$0,-8(%ebp)

	movl	$0,-12(%ebp)

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-38,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

# getNextParamValue_while_102	:	 [@2461]
	movl	-4(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	jl	2466
	movl	$0,%eax
# getNextParamValue_reltrue_103	:	 [@2466]
	testl	%eax,%eax
	jz	2719

	movl	-8(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2473
	movl	$0,%eax
# getNextParamValue_reltrue_106	:	 [@2473]
	testl	%eax,%eax
	jz	2484
	movl	-12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2480
	movl	$0,%eax
# getNextParamValue_reltrue_107	:	 [@2480]
	testl	%eax,%eax
	jz	2484
	movl	$1,%eax
	jmp	2485
# getNextParamValue_logtermfalse_105	:	 [@2484]
	movl	$0,%eax
# getNextParamValue_logtermtrue_105	:	 [@2485]
	testl	%eax,%eax
	jnz	2488
	jmp	2517
# getNextParamValue_ifbl_104	:	 [@2488]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$41,%ebx
	movl	$1,%eax
	je	2498
	movl	$0,%eax
# getNextParamValue_reltrue_109	:	 [@2498]
	testl	%eax,%eax
	jnz	2501
	jmp	2502
# getNextParamValue_ifbl_108	:	 [@2501]
	jmp	2719
# getNextParamValue_elsebl_108	:	 [@2502]
# getNextParamValue_endif_108	:	 [@2502]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$44,%ebx
	movl	$1,%eax
	je	2512
	movl	$0,%eax
# getNextParamValue_reltrue_111	:	 [@2512]
	testl	%eax,%eax
	jnz	2515
	jmp	2516
# getNextParamValue_ifbl_110	:	 [@2515]
	jmp	2719
# getNextParamValue_elsebl_110	:	 [@2516]
# getNextParamValue_endif_110	:	 [@2516]
	jmp	2517
# getNextParamValue_elsebl_104	:	 [@2517]
# getNextParamValue_endif_104	:	 [@2517]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$34,%ebx
	movl	$1,%eax
	je	2527
	movl	$0,%eax
# getNextParamValue_reltrue_113	:	 [@2527]
	testl	%eax,%eax
	jnz	2530
	jmp	2556
# getNextParamValue_ifbl_112	:	 [@2530]

	movl	%ebp,%eax
	addl	$-38,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$92,%ebx
	movl	$1,%eax
	jne	2540
	movl	$0,%eax
# getNextParamValue_reltrue_115	:	 [@2540]
	testl	%eax,%eax
	jnz	2543
	jmp	2555
# getNextParamValue_ifbl_114	:	 [@2543]

	movl	-8(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	2548
	movl	$0,%eax
# getNextParamValue_reltrue_117	:	 [@2548]
	testl	%eax,%eax
	jnz	2551
	jmp	2553
# getNextParamValue_ifbl_116	:	 [@2551]

	movl	$0,-8(%ebp)
	jmp	2554
# getNextParamValue_elsebl_116	:	 [@2553]

	movl	$1,-8(%ebp)
# getNextParamValue_endif_116	:	 [@2554]
	jmp	2555
# getNextParamValue_elsebl_114	:	 [@2555]
# getNextParamValue_endif_114	:	 [@2555]
	jmp	2556
# getNextParamValue_elsebl_112	:	 [@2556]
# getNextParamValue_endif_112	:	 [@2556]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$40,%ebx
	movl	$1,%eax
	je	2566
	movl	$0,%eax
# getNextParamValue_reltrue_119	:	 [@2566]
	testl	%eax,%eax
	jnz	2569
	jmp	2574
# getNextParamValue_ifbl_118	:	 [@2569]

	movl	-12(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)
	jmp	2574
# getNextParamValue_elsebl_118	:	 [@2574]
# getNextParamValue_endif_118	:	 [@2574]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$41,%ebx
	movl	$1,%eax
	je	2584
	movl	$0,%eax
# getNextParamValue_reltrue_121	:	 [@2584]
	testl	%eax,%eax
	jnz	2587
	jmp	2592
# getNextParamValue_ifbl_120	:	 [@2587]

	movl	-12(%ebp),%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)
	jmp	2592
# getNextParamValue_elsebl_120	:	 [@2592]
# getNextParamValue_endif_120	:	 [@2592]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-38,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx
	jmp	2461
# getNextParamValue_endwhile_102	:	 [@2719]

	movl	$0,%eax
	jmp	2721
# getNextParamValue_ret	:	 [@2721]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	parseParametersList [@2724]
# .type	parseParametersList,@function
# parseParametersList	:	 [@2724]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$25,%esp

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	5039
	addl	$4,%esp

	subl	$4,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$40,%ebx
	movl	$1,%eax
	jne	2780
	movl	$0,%eax
# parseParametersList_reltrue_123	:	 [@2780]
	testl	%eax,%eax
	jnz	2783
	jmp	2785
# parseParametersList_ifbl_122	:	 [@2783]

	movl	$0,%eax
	jmp	3155
# parseParametersList_elsebl_122	:	 [@2785]
# parseParametersList_endif_122	:	 [@2785]

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,-4(%ebp)

# parseParametersList_while_124	:	 [@2801]
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	2817
	movl	$0,%eax
# parseParametersList_reltrue_125	:	 [@2817]
	testl	%eax,%eax
	jz	3079

	subl	$4,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$41,%ebx
	movl	$1,%eax
	je	2867
	movl	$0,%eax
# parseParametersList_reltrue_127	:	 [@2867]
	testl	%eax,%eax
	jnz	2870
	jmp	2871
# parseParametersList_ifbl_126	:	 [@2870]
	jmp	3079
# parseParametersList_elsebl_126	:	 [@2871]
# parseParametersList_endif_126	:	 [@2871]

	subl	$4,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	-4(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	2914
	movl	$0,%eax
# parseParametersList_reltrue_130	:	 [@2914]
	testl	%eax,%eax
	jnz	2930
	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$44,%ebx
	movl	$1,%eax
	je	2926
	movl	$0,%eax
# parseParametersList_reltrue_131	:	 [@2926]
	testl	%eax,%eax
	jnz	2930
	movl	$0,%eax
	jmp	2931
# parseParametersList_logexprtrue_129	:	 [@2930]
	movl	$1,%eax
# parseParametersList_logexprfalse_129	:	 [@2931]
	testl	%eax,%eax
	jnz	2934
	jmp	3003
# parseParametersList_ifbl_128	:	 [@2934]

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$44,%ebx
	movl	$1,%eax
	je	2944
	movl	$0,%eax
# parseParametersList_reltrue_133	:	 [@2944]
	testl	%eax,%eax
	jnz	2947
	jmp	2963
# parseParametersList_ifbl_132	:	 [@2947]

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	2963
# parseParametersList_elsebl_132	:	 [@2963]
# parseParametersList_endif_132	:	 [@2963]

	movl	$0,-4(%ebp)

	subl	$4,%esp
	movl	$1672,0(%esp)
	call	malloc
	addl	$4,%esp
	movl	%eax,-12(%ebp)

	movl	-12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	2974
	movl	$0,%eax
# parseParametersList_reltrue_135	:	 [@2974]
	testl	%eax,%eax
	jnz	2977
	jmp	2990
# parseParametersList_ifbl_134	:	 [@2977]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11500,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	3155
# parseParametersList_elsebl_134	:	 [@2990]
# parseParametersList_endif_134	:	 [@2990]

	subl	$12,%esp
	movl	-12(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$1672,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$4,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp
	jmp	3003
# parseParametersList_elsebl_128	:	 [@3003]
# parseParametersList_endif_128	:	 [@3003]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$64,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-8(%ebp)

	movl	20(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	3022
	movl	$0,%eax
# parseParametersList_reltrue_137	:	 [@3022]
	testl	%eax,%eax
	jnz	3025
	jmp	3038
# parseParametersList_ifbl_136	:	 [@3025]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	$64,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	call	2166
	addl	$12,%esp
	movl	%eax,-8(%ebp)
	jmp	3050
# parseParametersList_elsebl_136	:	 [@3038]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	$64,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	call	2386
	addl	$12,%esp
	movl	%eax,-8(%ebp)
# parseParametersList_endif_136	:	 [@3050]

	movl	-8(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	3055
	movl	$0,%eax
# parseParametersList_reltrue_139	:	 [@3055]
	testl	%eax,%eax
	jnz	3058
	jmp	3071
# parseParametersList_ifbl_138	:	 [@3058]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11530,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10506,%ebx
	movl	%ebx,%eax
	jmp	3155
# parseParametersList_elsebl_138	:	 [@3071]
# parseParametersList_endif_138	:	 [@3071]

	subl	$8,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-12(%ebp),%eax
	movl	%eax,4(%esp)
	call	5171
	addl	$8,%esp
	jmp	2801
# parseParametersList_endwhile_124	:	 [@3079]

	movl	%ebp,%eax
	addl	$-25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-25,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$41,%ebx
	movl	$1,%eax
	jne	3122
	movl	$0,%eax
# parseParametersList_reltrue_141	:	 [@3122]
	testl	%eax,%eax
	jnz	3125
	jmp	3138
# parseParametersList_ifbl_140	:	 [@3125]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11588,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10506,%ebx
	movl	%ebx,%eax
	jmp	3155
# parseParametersList_elsebl_140	:	 [@3138]

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
# parseParametersList_endif_140	:	 [@3153]

	movl	$0,%eax
	jmp	3155
# parseParametersList_ret	:	 [@3155]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	substage_init [@3158]
# .type	substage_init,@function
# substage_init	:	 [@3158]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14036,%eax
	movl	%eax,0(%esp)
	call	358
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20712,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	$0,%eax
	jmp	3195
# substage_init_ret	:	 [@3195]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	substage_destroy [@3198]
# .type	substage_destroy,@function
# substage_destroy	:	 [@3198]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	$0,%eax
	jmp	3203
# substage_destroy_ret	:	 [@3203]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isBufferPosMacroBegin [@3206]
# .type	isBufferPosMacroBegin,@function
# isBufferPosMacroBegin	:	 [@3206]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$13,%esp

	movl	16(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3214
	movl	$0,%eax
# isBufferPosMacroBegin_reltrue_2	:	 [@3214]
	testl	%eax,%eax
	jnz	3225
	movl	16(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	3221
	movl	$0,%eax
# isBufferPosMacroBegin_reltrue_3	:	 [@3221]
	testl	%eax,%eax
	jnz	3225
	movl	$0,%eax
	jmp	3226
# isBufferPosMacroBegin_logexprtrue_1	:	 [@3225]
	movl	$1,%eax
# isBufferPosMacroBegin_logexprfalse_1	:	 [@3226]
	testl	%eax,%eax
	jnz	3229
	jmp	3231
# isBufferPosMacroBegin_ifbl_0	:	 [@3229]

	movl	$1,%eax
	jmp	3334
# isBufferPosMacroBegin_elsebl_0	:	 [@3231]
# isBufferPosMacroBegin_endif_0	:	 [@3231]

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	movl	16(%ebp),%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$2,8(%esp)
	movl	$11621,12(%esp)
	call	1206
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3275
	movl	$0,%eax
# isBufferPosMacroBegin_reltrue_5	:	 [@3275]
	testl	%eax,%eax
	jnz	3278
	jmp	3289
# isBufferPosMacroBegin_ifbl_4	:	 [@3278]

	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	16(%ebp),%ebx
	addl	$2,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	3334
# isBufferPosMacroBegin_elsebl_4	:	 [@3289]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isalnum
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3303
	movl	$0,%eax
# isBufferPosMacroBegin_reltrue_8	:	 [@3303]
	testl	%eax,%eax
	jz	3319
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$95,%ebx
	movl	$1,%eax
	jne	3315
	movl	$0,%eax
# isBufferPosMacroBegin_reltrue_9	:	 [@3315]
	testl	%eax,%eax
	jz	3319
	movl	$1,%eax
	jmp	3320
# isBufferPosMacroBegin_logtermfalse_7	:	 [@3319]
	movl	$0,%eax
# isBufferPosMacroBegin_logtermtrue_7	:	 [@3320]
	testl	%eax,%eax
	jnz	3323
	jmp	3332
# isBufferPosMacroBegin_ifbl_6	:	 [@3323]

	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	16(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	3334
# isBufferPosMacroBegin_elsebl_6	:	 [@3332]
# isBufferPosMacroBegin_endif_6	:	 [@3332]
# isBufferPosMacroBegin_endif_4	:	 [@3332]

	movl	$0,%eax
	jmp	3334
# isBufferPosMacroBegin_ret	:	 [@3334]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isBufferPosMacroEnd [@3337]
# .type	isBufferPosMacroEnd,@function
# isBufferPosMacroEnd	:	 [@3337]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$13,%esp

	movl	16(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	jg	3345
	movl	$0,%eax
# isBufferPosMacroEnd_reltrue_11	:	 [@3345]
	testl	%eax,%eax
	jnz	3348
	jmp	3350
# isBufferPosMacroEnd_ifbl_10	:	 [@3348]

	movl	$0,%eax
	jmp	3467
# isBufferPosMacroEnd_elsebl_10	:	 [@3350]
# isBufferPosMacroEnd_endif_10	:	 [@3350]

	movl	16(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	3355
	movl	$0,%eax
# isBufferPosMacroEnd_reltrue_13	:	 [@3355]
	testl	%eax,%eax
	jnz	3358
	jmp	3367
# isBufferPosMacroEnd_ifbl_12	:	 [@3358]

	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	16(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	3467
# isBufferPosMacroEnd_elsebl_12	:	 [@3367]
# isBufferPosMacroEnd_endif_12	:	 [@3367]

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	pushl	16(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	16(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$2,8(%esp)
	movl	$11621,12(%esp)
	call	1206
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3408
	movl	$0,%eax
# isBufferPosMacroEnd_reltrue_15	:	 [@3408]
	testl	%eax,%eax
	jnz	3411
	jmp	3422
# isBufferPosMacroEnd_ifbl_14	:	 [@3411]

	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	16(%ebp),%ebx
	addl	$2,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	3467
# isBufferPosMacroEnd_elsebl_14	:	 [@3422]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isalnum
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3436
	movl	$0,%eax
# isBufferPosMacroEnd_reltrue_18	:	 [@3436]
	testl	%eax,%eax
	jz	3452
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$95,%ebx
	movl	$1,%eax
	jne	3448
	movl	$0,%eax
# isBufferPosMacroEnd_reltrue_19	:	 [@3448]
	testl	%eax,%eax
	jz	3452
	movl	$1,%eax
	jmp	3453
# isBufferPosMacroEnd_logtermfalse_17	:	 [@3452]
	movl	$0,%eax
# isBufferPosMacroEnd_logtermtrue_17	:	 [@3453]
	testl	%eax,%eax
	jnz	3456
	jmp	3465
# isBufferPosMacroEnd_ifbl_16	:	 [@3456]

	movl	%ebp,%eax
	addl	$20,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	16(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	3467
# isBufferPosMacroEnd_elsebl_16	:	 [@3465]
# isBufferPosMacroEnd_endif_16	:	 [@3465]
# isBufferPosMacroEnd_endif_14	:	 [@3465]

	movl	$0,%eax
	jmp	3467
# isBufferPosMacroEnd_ret	:	 [@3467]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	setReplacementCharacter [@3470]
# .type	setReplacementCharacter,@function
# setReplacementCharacter	:	 [@3470]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$24,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20712,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3489
	movl	$0,%eax
# setReplacementCharacter_reltrue_21	:	 [@3489]
	testl	%eax,%eax
	jnz	3492
	jmp	3493
# setReplacementCharacter_ifbl_20	:	 [@3492]

	jmp	3853
# setReplacementCharacter_elsebl_20	:	 [@3493]
# setReplacementCharacter_endif_20	:	 [@3493]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20712,%eax
	movl	(%eax),%eax
	movl	%eax,-20(%ebp)

	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,-24(%ebp)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3515
	movl	$0,%eax
# setReplacementCharacter_reltrue_23	:	 [@3515]
	testl	%eax,%eax
	jnz	3518
	jmp	3660
# setReplacementCharacter_ifbl_22	:	 [@3518]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,0(%esp)
	call	5095
	addl	$4,%esp
	movl	%eax,-16(%ebp)

# setReplacementCharacter_while_24	:	 [@3527]
	movl	-16(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	3532
	movl	$0,%eax
# setReplacementCharacter_reltrue_25	:	 [@3532]
	testl	%eax,%eax
	jz	3659

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	call	1671
	addl	$4,%esp
	movl	%eax,-4(%ebp)

	movl	$0,-8(%ebp)

	movl	$0,-12(%ebp)

	subl	$16,%esp
	movl	-24(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	(%eax),%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	%eax,12(%esp)
	call	3206
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	3570
	movl	$0,%eax
# setReplacementCharacter_reltrue_28	:	 [@3570]
	testl	%eax,%eax
	jz	3599
	subl	$16,%esp
	movl	-24(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	movl	-8(%ebp),%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	%eax,12(%esp)
	call	3337
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	3595
	movl	$0,%eax
# setReplacementCharacter_reltrue_29	:	 [@3595]
	testl	%eax,%eax
	jz	3599
	movl	$1,%eax
	jmp	3600
# setReplacementCharacter_logtermfalse_27	:	 [@3599]
	movl	$0,%eax
# setReplacementCharacter_logtermtrue_27	:	 [@3600]
	testl	%eax,%eax
	jnz	3603
	jmp	3652
# setReplacementCharacter_ifbl_26	:	 [@3603]

	subl	$16,%esp
	movl	-24(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	movl	-4(%ebp),%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,12(%esp)
	call	1328
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3622
	movl	$0,%eax
# setReplacementCharacter_reltrue_31	:	 [@3622]
	testl	%eax,%eax
	jnz	3625
	jmp	3651
# setReplacementCharacter_ifbl_30	:	 [@3625]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	3659
# setReplacementCharacter_elsebl_30	:	 [@3651]
# setReplacementCharacter_endif_30	:	 [@3651]
	jmp	3652
# setReplacementCharacter_elsebl_26	:	 [@3652]
# setReplacementCharacter_endif_26	:	 [@3652]

	subl	$4,%esp
	movl	-16(%ebp),%eax
	movl	%eax,0(%esp)
	call	5119
	addl	$4,%esp
	movl	%eax,-16(%ebp)
	jmp	3527
# setReplacementCharacter_endwhile_24	:	 [@3659]
	jmp	3660
# setReplacementCharacter_elsebl_22	:	 [@3660]
# setReplacementCharacter_endif_22	:	 [@3660]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	3670
	movl	$0,%eax
# setReplacementCharacter_reltrue_33	:	 [@3670]
	testl	%eax,%eax
	jnz	3673
	jmp	3761
# setReplacementCharacter_ifbl_32	:	 [@3673]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	(%eax),%eax
	pushl	%eax
	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	call	1671
	addl	$4,%esp
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	3693
	movl	$0,%eax
# setReplacementCharacter_reltrue_35	:	 [@3693]
	testl	%eax,%eax
	jnz	3696
	jmp	3709
# setReplacementCharacter_ifbl_34	:	 [@3696]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	3760
# setReplacementCharacter_elsebl_34	:	 [@3709]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	jmp	3853
# setReplacementCharacter_endif_34	:	 [@3760]
	jmp	3761
# setReplacementCharacter_elsebl_32	:	 [@3761]
# setReplacementCharacter_endif_32	:	 [@3761]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	3777
	movl	$0,%eax
# setReplacementCharacter_reltrue_37	:	 [@3777]
	testl	%eax,%eax
	jnz	3780
	jmp	3805
# setReplacementCharacter_ifbl_36	:	 [@3780]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20712,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20720,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20724,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	3853
# setReplacementCharacter_elsebl_36	:	 [@3805]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-24,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20716,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
# setReplacementCharacter_endif_36	:	 [@3853]
# setReplacementCharacter_ret	:	 [@3853]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	substage_getNext [@3856]
# .type	substage_getNext,@function
# substage_getNext	:	 [@3856]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$53,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	3470
	addl	$8,%esp

# substage_getNext_while_38	:	 [@3866]
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3877
	movl	$0,%eax
# substage_getNext_reltrue_39	:	 [@3877]
	testl	%eax,%eax
	jz	4463

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14036,%eax
	movl	%eax,-40(%ebp)

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jge	3900
	movl	$0,%eax
# substage_getNext_reltrue_41	:	 [@3900]
	testl	%eax,%eax
	jnz	3903
	jmp	3926
# substage_getNext_ifbl_40	:	 [@3903]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14036,%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	3920
	movl	$0,%eax
# substage_getNext_reltrue_43	:	 [@3920]
	testl	%eax,%eax
	jnz	3923
	jmp	3925
# substage_getNext_ifbl_42	:	 [@3923]

	movl	-4(%ebp),%eax
	jmp	4465
# substage_getNext_elsebl_42	:	 [@3925]
# substage_getNext_endif_42	:	 [@3925]
	jmp	3926
# substage_getNext_elsebl_40	:	 [@3926]
# substage_getNext_endif_40	:	 [@3926]

	subl	$4,%esp
	movl	-40(%ebp),%eax
	movl	%eax,0(%esp)
	call	401
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6672,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3941
	movl	$0,%eax
# substage_getNext_reltrue_46	:	 [@3941]
	testl	%eax,%eax
	jz	3957
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	3953
	movl	$0,%eax
# substage_getNext_reltrue_47	:	 [@3953]
	testl	%eax,%eax
	jz	3957
	movl	$1,%eax
	jmp	3958
# substage_getNext_logtermfalse_45	:	 [@3957]
	movl	$0,%eax
# substage_getNext_logtermtrue_45	:	 [@3958]
	testl	%eax,%eax
	jnz	3961
	jmp	4375
# substage_getNext_ifbl_44	:	 [@3961]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	call	4524
	addl	$4,%esp
	movl	%eax,-20(%ebp)

# substage_getNext_while_48	:	 [@3970]
	movl	-20(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	3975
	movl	$0,%eax
# substage_getNext_reltrue_49	:	 [@3975]
	testl	%eax,%eax
	jz	4374

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	call	1671
	addl	$4,%esp
	movl	%eax,-16(%ebp)

	movl	$0,-8(%ebp)

	movl	$0,-12(%ebp)

	subl	$16,%esp
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	%eax,12(%esp)
	call	3206
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	4016
	movl	$0,%eax
# substage_getNext_reltrue_52	:	 [@4016]
	testl	%eax,%eax
	jz	4048
	subl	$16,%esp
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	movl	-8(%ebp),%ebx
	addl	-16(%ebp),%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	%eax,12(%esp)
	call	3337
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	4044
	movl	$0,%eax
# substage_getNext_reltrue_53	:	 [@4044]
	testl	%eax,%eax
	jz	4048
	movl	$1,%eax
	jmp	4049
# substage_getNext_logtermfalse_51	:	 [@4048]
	movl	$0,%eax
# substage_getNext_logtermtrue_51	:	 [@4049]
	testl	%eax,%eax
	jnz	4052
	jmp	4367
# substage_getNext_ifbl_50	:	 [@4052]

	subl	$16,%esp
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	movl	-16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,12(%esp)
	call	1328
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4074
	movl	$0,%eax
# substage_getNext_reltrue_55	:	 [@4074]
	testl	%eax,%eax
	jnz	4077
	jmp	4366
# substage_getNext_ifbl_54	:	 [@4077]

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jg	4101
	movl	$0,%eax
# substage_getNext_reltrue_57	:	 [@4101]
	testl	%eax,%eax
	jnz	4104
	jmp	4105
# substage_getNext_ifbl_56	:	 [@4104]
	jmp	3970
# substage_getNext_elsebl_56	:	 [@4105]
# substage_getNext_endif_56	:	 [@4105]

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,-12(%ebp)

	subl	$4,%esp
	movl	-40(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-53,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,0(%esp)
	call	5593
	addl	$4,%esp
	testl	%eax,%eax
	jnz	4173
	movl	%ebp,%eax
	addl	$-53,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$40,%ebx
	movl	$1,%eax
	jne	4169
	movl	$0,%eax
# substage_getNext_reltrue_60	:	 [@4169]
	testl	%eax,%eax
	jnz	4173
	movl	$0,%eax
	jmp	4174
# substage_getNext_logexprtrue_59	:	 [@4173]
	movl	$1,%eax
# substage_getNext_logexprfalse_59	:	 [@4174]
	testl	%eax,%eax
	jnz	4177
	jmp	4186
# substage_getNext_ifbl_58	:	 [@4177]

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	4336
# substage_getNext_elsebl_58	:	 [@4186]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-36,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$8,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-36,%eax
	movl	%eax,4(%esp)
	movl	-40(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$0,12(%esp)
	call	2724
	addl	$16,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4211
	movl	$0,%eax
# substage_getNext_reltrue_62	:	 [@4211]
	testl	%eax,%eax
	jnz	4214
	jmp	4228
# substage_getNext_ifbl_61	:	 [@4214]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11624,4(%esp)
	movl	-40(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	subl	$4,%esp
	movl	$1,0(%esp)
	call	exit
	addl	$4,%esp
	jmp	4228
# substage_getNext_elsebl_61	:	 [@4228]
# substage_getNext_endif_61	:	 [@4228]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,0(%esp)
	call	5095
	addl	$4,%esp
	movl	%eax,-24(%ebp)

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-36,%eax
	movl	%eax,0(%esp)
	call	5095
	addl	$4,%esp
	movl	%eax,-28(%ebp)

# substage_getNext_while_63	:	 [@4244]
	movl	-24(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4249
	movl	$0,%eax
# substage_getNext_reltrue_65	:	 [@4249]
	testl	%eax,%eax
	jz	4260
	movl	-28(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4256
	movl	$0,%eax
# substage_getNext_reltrue_66	:	 [@4256]
	testl	%eax,%eax
	jz	4260
	movl	$1,%eax
	jmp	4261
# substage_getNext_logtermfalse_64	:	 [@4260]
	movl	$0,%eax
# substage_getNext_logtermtrue_64	:	 [@4261]
	testl	%eax,%eax
	jz	4302

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-24,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$64,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-24,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-28,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,4(%esp)
	call	1751
	addl	$8,%esp

	subl	$4,%esp
	movl	-24(%ebp),%eax
	movl	%eax,0(%esp)
	call	5119
	addl	$4,%esp
	movl	%eax,-24(%ebp)

	subl	$4,%esp
	movl	-28(%ebp),%eax
	movl	%eax,0(%esp)
	call	5119
	addl	$4,%esp
	movl	%eax,-28(%ebp)
	jmp	4244
# substage_getNext_endwhile_63	:	 [@4302]

	movl	-24(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4307
	movl	$0,%eax
# substage_getNext_reltrue_69	:	 [@4307]
	testl	%eax,%eax
	jnz	4318
	movl	-28(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4314
	movl	$0,%eax
# substage_getNext_reltrue_70	:	 [@4314]
	testl	%eax,%eax
	jnz	4318
	movl	$0,%eax
	jmp	4319
# substage_getNext_logexprtrue_68	:	 [@4318]
	movl	$1,%eax
# substage_getNext_logexprfalse_68	:	 [@4319]
	testl	%eax,%eax
	jnz	4322
	jmp	4336
# substage_getNext_ifbl_67	:	 [@4322]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11674,4(%esp)
	movl	-40(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	subl	$4,%esp
	movl	$1,0(%esp)
	call	exit
	addl	$4,%esp
	jmp	4336
# substage_getNext_elsebl_67	:	 [@4336]
# substage_getNext_endif_67	:	 [@4336]
# substage_getNext_endif_58	:	 [@4336]

	movl	%ebp,%eax
	addl	$-20,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jg	4346
	movl	$0,%eax
# substage_getNext_reltrue_72	:	 [@4346]
	testl	%eax,%eax
	jnz	4349
	jmp	4365
# substage_getNext_ifbl_71	:	 [@4349]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$20712,%eax
	pushl	%eax
	movl	-20(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	3470
	addl	$8,%esp
	jmp	4365
# substage_getNext_elsebl_71	:	 [@4365]
# substage_getNext_endif_71	:	 [@4365]
	jmp	4366
# substage_getNext_elsebl_54	:	 [@4366]
# substage_getNext_endif_54	:	 [@4366]
	jmp	4367
# substage_getNext_elsebl_50	:	 [@4367]
# substage_getNext_endif_50	:	 [@4367]

	subl	$4,%esp
	movl	-20(%ebp),%eax
	movl	%eax,0(%esp)
	call	4548
	addl	$4,%esp
	movl	%eax,-20(%ebp)
	jmp	3970
# substage_getNext_endwhile_48	:	 [@4374]
	jmp	4375
# substage_getNext_elsebl_44	:	 [@4375]
# substage_getNext_endif_44	:	 [@4375]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4386
	movl	$0,%eax
# substage_getNext_reltrue_75	:	 [@4386]
	testl	%eax,%eax
	jz	4408
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jle	4404
	movl	$0,%eax
# substage_getNext_reltrue_76	:	 [@4404]
	testl	%eax,%eax
	jz	4408
	movl	$1,%eax
	jmp	4409
# substage_getNext_logtermfalse_74	:	 [@4408]
	movl	$0,%eax
# substage_getNext_logtermtrue_74	:	 [@4409]
	testl	%eax,%eax
	jnz	4412
	jmp	4462
# substage_getNext_ifbl_73	:	 [@4412]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-40,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	4462
# substage_getNext_elsebl_73	:	 [@4462]
# substage_getNext_endif_73	:	 [@4462]
	jmp	3866
# substage_getNext_endwhile_38	:	 [@4463]

	movl	$0,%eax
	jmp	4465
# substage_getNext_ret	:	 [@4465]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	Clear_DefinesList [@4468]
# .type	Clear_DefinesList,@function
# Clear_DefinesList	:	 [@4468]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Clear_DefinesList_ret	:	 [@4483]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_Member_Of_DefinesList [@4486]
# .type	Is_Member_Of_DefinesList,@function
# Is_Member_Of_DefinesList	:	 [@4486]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

# Is_Member_Of_DefinesList_while_0	:	 [@4495]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4500
	movl	$0,%eax
# Is_Member_Of_DefinesList_reltrue_1	:	 [@4500]
	testl	%eax,%eax
	jz	4519

	movl	-4(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	4507
	movl	$0,%eax
# Is_Member_Of_DefinesList_reltrue_3	:	 [@4507]
	testl	%eax,%eax
	jnz	4510
	jmp	4512
# Is_Member_Of_DefinesList_ifbl_2	:	 [@4510]

	movl	$1,%eax
	jmp	4521
# Is_Member_Of_DefinesList_elsebl_2	:	 [@4512]
# Is_Member_Of_DefinesList_endif_2	:	 [@4512]

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)
	jmp	4495
# Is_Member_Of_DefinesList_endwhile_0	:	 [@4519]

	movl	$0,%eax
	jmp	4521
# Is_Member_Of_DefinesList_ret	:	 [@4521]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Front_Of_DefinesList [@4524]
# .type	Get_Front_Of_DefinesList,@function
# Get_Front_Of_DefinesList	:	 [@4524]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	jmp	4533
# Get_Front_Of_DefinesList_ret	:	 [@4533]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Back_Of_DefinesList [@4536]
# .type	Get_Back_Of_DefinesList,@function
# Get_Back_Of_DefinesList	:	 [@4536]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	jmp	4545
# Get_Back_Of_DefinesList_ret	:	 [@4545]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Next_In_DefinesList [@4548]
# .type	Get_Next_In_DefinesList,@function
# Get_Next_In_DefinesList	:	 [@4548]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	jmp	4557
# Get_Next_In_DefinesList_ret	:	 [@4557]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Next_In_DefinesList [@4560]
# .type	Set_Next_In_DefinesList,@function
# Set_Next_In_DefinesList	:	 [@4560]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Next_In_DefinesList_ret	:	 [@4571]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Prev_In_DefinesList [@4574]
# .type	Get_Prev_In_DefinesList,@function
# Get_Prev_In_DefinesList	:	 [@4574]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	(%eax),%eax
	jmp	4583
# Get_Prev_In_DefinesList_ret	:	 [@4583]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Prev_In_DefinesList [@4586]
# .type	Set_Prev_In_DefinesList,@function
# Set_Prev_In_DefinesList	:	 [@4586]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Prev_In_DefinesList_ret	:	 [@4597]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Front_Of_DefinesList [@4600]
# .type	Add_To_Front_Of_DefinesList,@function
# Add_To_Front_Of_DefinesList	:	 [@4600]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4619
	movl	$0,%eax
# Add_To_Front_Of_DefinesList_reltrue_5	:	 [@4619]
	testl	%eax,%eax
	jnz	4622
	jmp	4645
# Add_To_Front_Of_DefinesList_ifbl_4	:	 [@4622]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	4675
# Add_To_Front_Of_DefinesList_elsebl_4	:	 [@4645]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Front_Of_DefinesList_endif_4	:	 [@4675]
# Add_To_Front_Of_DefinesList_ret	:	 [@4675]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Back_Of_DefinesList [@4678]
# .type	Add_To_Back_Of_DefinesList,@function
# Add_To_Back_Of_DefinesList	:	 [@4678]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4697
	movl	$0,%eax
# Add_To_Back_Of_DefinesList_reltrue_7	:	 [@4697]
	testl	%eax,%eax
	jnz	4700
	jmp	4723
# Add_To_Back_Of_DefinesList_ifbl_6	:	 [@4700]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	4753
# Add_To_Back_Of_DefinesList_elsebl_6	:	 [@4723]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Back_Of_DefinesList_endif_6	:	 [@4753]
# Add_To_Back_Of_DefinesList_ret	:	 [@4753]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_DefinesList_After [@4756]
# .type	Add_To_DefinesList_After,@function
# Add_To_DefinesList_After	:	 [@4756]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_DefinesList_After_ret	:	 [@4779]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Append_DefinesList [@4782]
# .type	Append_DefinesList,@function
# Append_DefinesList	:	 [@4782]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4795
	movl	$0,%eax
# Append_DefinesList_reltrue_9	:	 [@4795]
	testl	%eax,%eax
	jnz	4798
	jmp	4877
# Append_DefinesList_ifbl_8	:	 [@4798]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4808
	movl	$0,%eax
# Append_DefinesList_reltrue_11	:	 [@4808]
	testl	%eax,%eax
	jnz	4811
	jmp	4836
# Append_DefinesList_ifbl_10	:	 [@4811]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	4876
# Append_DefinesList_elsebl_10	:	 [@4836]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Append_DefinesList_endif_10	:	 [@4876]
	jmp	4877
# Append_DefinesList_elsebl_8	:	 [@4877]
# Append_DefinesList_endif_8	:	 [@4877]
# Append_DefinesList_ret	:	 [@4877]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_Front_Of_DefinesList [@4880]
# .type	Remove_From_Front_Of_DefinesList,@function
# Remove_From_Front_Of_DefinesList	:	 [@4880]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	4913
	movl	$0,%eax
# Remove_From_Front_Of_DefinesList_reltrue_13	:	 [@4913]
	testl	%eax,%eax
	jnz	4916
	jmp	4923
# Remove_From_Front_Of_DefinesList_ifbl_12	:	 [@4916]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	4931
# Remove_From_Front_Of_DefinesList_elsebl_12	:	 [@4923]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Remove_From_Front_Of_DefinesList_endif_12	:	 [@4931]

	movl	-4(%ebp),%eax
	jmp	4933
# Remove_From_Front_Of_DefinesList_ret	:	 [@4933]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_DefinesList [@4936]
# .type	Remove_From_DefinesList,@function
# Remove_From_DefinesList	:	 [@4936]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4949
	movl	$0,%eax
# Remove_From_DefinesList_reltrue_15	:	 [@4949]
	testl	%eax,%eax
	jnz	4952
	jmp	4967
# Remove_From_DefinesList_ifbl_14	:	 [@4952]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	4979
# Remove_From_DefinesList_elsebl_14	:	 [@4967]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_DefinesList_endif_14	:	 [@4979]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	4989
	movl	$0,%eax
# Remove_From_DefinesList_reltrue_17	:	 [@4989]
	testl	%eax,%eax
	jnz	4992
	jmp	5007
# Remove_From_DefinesList_ifbl_16	:	 [@4992]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$852,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	5019
# Remove_From_DefinesList_elsebl_16	:	 [@5007]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$848,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_DefinesList_endif_16	:	 [@5019]
# Remove_From_DefinesList_ret	:	 [@5019]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_DefinesList_Empty [@5022]
# .type	Is_DefinesList_Empty,@function
# Is_DefinesList_Empty	:	 [@5022]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5035
	movl	$0,%eax
# Is_DefinesList_Empty_reltrue_18	:	 [@5035]
	jmp	5036
# Is_DefinesList_Empty_ret	:	 [@5036]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Clear_ParametersList [@5039]
# .type	Clear_ParametersList,@function
# Clear_ParametersList	:	 [@5039]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Clear_ParametersList_ret	:	 [@5054]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_Member_Of_ParametersList [@5057]
# .type	Is_Member_Of_ParametersList,@function
# Is_Member_Of_ParametersList	:	 [@5057]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

# Is_Member_Of_ParametersList_while_19	:	 [@5066]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5071
	movl	$0,%eax
# Is_Member_Of_ParametersList_reltrue_20	:	 [@5071]
	testl	%eax,%eax
	jz	5090

	movl	-4(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	5078
	movl	$0,%eax
# Is_Member_Of_ParametersList_reltrue_22	:	 [@5078]
	testl	%eax,%eax
	jnz	5081
	jmp	5083
# Is_Member_Of_ParametersList_ifbl_21	:	 [@5081]

	movl	$1,%eax
	jmp	5092
# Is_Member_Of_ParametersList_elsebl_21	:	 [@5083]
# Is_Member_Of_ParametersList_endif_21	:	 [@5083]

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)
	jmp	5066
# Is_Member_Of_ParametersList_endwhile_19	:	 [@5090]

	movl	$0,%eax
	jmp	5092
# Is_Member_Of_ParametersList_ret	:	 [@5092]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Front_Of_ParametersList [@5095]
# .type	Get_Front_Of_ParametersList,@function
# Get_Front_Of_ParametersList	:	 [@5095]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	jmp	5104
# Get_Front_Of_ParametersList_ret	:	 [@5104]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Back_Of_ParametersList [@5107]
# .type	Get_Back_Of_ParametersList,@function
# Get_Back_Of_ParametersList	:	 [@5107]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	jmp	5116
# Get_Back_Of_ParametersList_ret	:	 [@5116]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Next_In_ParametersList [@5119]
# .type	Get_Next_In_ParametersList,@function
# Get_Next_In_ParametersList	:	 [@5119]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	jmp	5128
# Get_Next_In_ParametersList_ret	:	 [@5128]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Next_In_ParametersList [@5131]
# .type	Set_Next_In_ParametersList,@function
# Set_Next_In_ParametersList	:	 [@5131]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Next_In_ParametersList_ret	:	 [@5142]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Prev_In_ParametersList [@5145]
# .type	Get_Prev_In_ParametersList,@function
# Get_Prev_In_ParametersList	:	 [@5145]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	(%eax),%eax
	jmp	5154
# Get_Prev_In_ParametersList_ret	:	 [@5154]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Prev_In_ParametersList [@5157]
# .type	Set_Prev_In_ParametersList,@function
# Set_Prev_In_ParametersList	:	 [@5157]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Prev_In_ParametersList_ret	:	 [@5168]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Front_Of_ParametersList [@5171]
# .type	Add_To_Front_Of_ParametersList,@function
# Add_To_Front_Of_ParametersList	:	 [@5171]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5190
	movl	$0,%eax
# Add_To_Front_Of_ParametersList_reltrue_24	:	 [@5190]
	testl	%eax,%eax
	jnz	5193
	jmp	5216
# Add_To_Front_Of_ParametersList_ifbl_23	:	 [@5193]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	5246
# Add_To_Front_Of_ParametersList_elsebl_23	:	 [@5216]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Front_Of_ParametersList_endif_23	:	 [@5246]
# Add_To_Front_Of_ParametersList_ret	:	 [@5246]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Back_Of_ParametersList [@5249]
# .type	Add_To_Back_Of_ParametersList,@function
# Add_To_Back_Of_ParametersList	:	 [@5249]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5268
	movl	$0,%eax
# Add_To_Back_Of_ParametersList_reltrue_26	:	 [@5268]
	testl	%eax,%eax
	jnz	5271
	jmp	5294
# Add_To_Back_Of_ParametersList_ifbl_25	:	 [@5271]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	5324
# Add_To_Back_Of_ParametersList_elsebl_25	:	 [@5294]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Back_Of_ParametersList_endif_25	:	 [@5324]
# Add_To_Back_Of_ParametersList_ret	:	 [@5324]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_ParametersList_After [@5327]
# .type	Add_To_ParametersList_After,@function
# Add_To_ParametersList_After	:	 [@5327]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_ParametersList_After_ret	:	 [@5350]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Append_ParametersList [@5353]
# .type	Append_ParametersList,@function
# Append_ParametersList	:	 [@5353]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5366
	movl	$0,%eax
# Append_ParametersList_reltrue_28	:	 [@5366]
	testl	%eax,%eax
	jnz	5369
	jmp	5448
# Append_ParametersList_ifbl_27	:	 [@5369]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5379
	movl	$0,%eax
# Append_ParametersList_reltrue_30	:	 [@5379]
	testl	%eax,%eax
	jnz	5382
	jmp	5407
# Append_ParametersList_ifbl_29	:	 [@5382]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	5447
# Append_ParametersList_elsebl_29	:	 [@5407]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Append_ParametersList_endif_29	:	 [@5447]
	jmp	5448
# Append_ParametersList_elsebl_27	:	 [@5448]
# Append_ParametersList_endif_27	:	 [@5448]
# Append_ParametersList_ret	:	 [@5448]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_Front_Of_ParametersList [@5451]
# .type	Remove_From_Front_Of_ParametersList,@function
# Remove_From_Front_Of_ParametersList	:	 [@5451]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5484
	movl	$0,%eax
# Remove_From_Front_Of_ParametersList_reltrue_32	:	 [@5484]
	testl	%eax,%eax
	jnz	5487
	jmp	5494
# Remove_From_Front_Of_ParametersList_ifbl_31	:	 [@5487]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	5502
# Remove_From_Front_Of_ParametersList_elsebl_31	:	 [@5494]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Remove_From_Front_Of_ParametersList_endif_31	:	 [@5502]

	movl	-4(%ebp),%eax
	jmp	5504
# Remove_From_Front_Of_ParametersList_ret	:	 [@5504]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_ParametersList [@5507]
# .type	Remove_From_ParametersList,@function
# Remove_From_ParametersList	:	 [@5507]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5520
	movl	$0,%eax
# Remove_From_ParametersList_reltrue_34	:	 [@5520]
	testl	%eax,%eax
	jnz	5523
	jmp	5538
# Remove_From_ParametersList_ifbl_33	:	 [@5523]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	5550
# Remove_From_ParametersList_elsebl_33	:	 [@5538]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_ParametersList_endif_33	:	 [@5550]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5560
	movl	$0,%eax
# Remove_From_ParametersList_reltrue_36	:	 [@5560]
	testl	%eax,%eax
	jnz	5563
	jmp	5578
# Remove_From_ParametersList_ifbl_35	:	 [@5563]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1668,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	5590
# Remove_From_ParametersList_elsebl_35	:	 [@5578]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1664,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_ParametersList_endif_35	:	 [@5590]
# Remove_From_ParametersList_ret	:	 [@5590]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_ParametersList_Empty [@5593]
# .type	Is_ParametersList_Empty,@function
# Is_ParametersList_Empty	:	 [@5593]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5606
	movl	$0,%eax
# Is_ParametersList_Empty_reltrue_37	:	 [@5606]
	jmp	5607
# Is_ParametersList_Empty_ret	:	 [@5607]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	directivestage_init [@5610]
# .type	directivestage_init,@function
# directivestage_init	:	 [@5610]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$7268,%eax
	movl	%eax,0(%esp)
	call	358
	addl	$4,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$4,%ebx
	imull	$20,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	call	4468
	addl	$4,%esp

	movl	$0,%eax
	jmp	5650
# directivestage_init_ret	:	 [@5650]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	directivestage_destroy [@5653]
# .type	directivestage_destroy,@function
# directivestage_destroy	:	 [@5653]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$16,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	call	4524
	addl	$4,%esp
	movl	%eax,-4(%ebp)

# directivestage_destroy_while_38	:	 [@5665]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5670
	movl	$0,%eax
# directivestage_destroy_reltrue_39	:	 [@5670]
	testl	%eax,%eax
	jz	5747

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5682
	movl	$0,%eax
# directivestage_destroy_reltrue_41	:	 [@5682]
	testl	%eax,%eax
	jnz	5685
	jmp	5695
# directivestage_destroy_ifbl_40	:	 [@5685]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp
	jmp	5695
# directivestage_destroy_elsebl_40	:	 [@5695]
# directivestage_destroy_endif_40	:	 [@5695]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,0(%esp)
	call	5095
	addl	$4,%esp
	movl	%eax,-12(%ebp)

# directivestage_destroy_while_42	:	 [@5704]
	movl	-12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	5709
	movl	$0,%eax
# directivestage_destroy_reltrue_43	:	 [@5709]
	testl	%eax,%eax
	jz	5725

	subl	$4,%esp
	movl	-12(%ebp),%eax
	movl	%eax,0(%esp)
	call	5119
	addl	$4,%esp
	movl	%eax,-16(%ebp)

	subl	$4,%esp
	movl	-12(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	movl	-16(%ebp),%eax
	movl	%eax,-12(%ebp)
	jmp	5704
# directivestage_destroy_endwhile_42	:	 [@5725]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,0(%esp)
	call	5039
	addl	$4,%esp

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	4548
	addl	$4,%esp
	movl	%eax,-8(%ebp)

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	movl	-8(%ebp),%eax
	movl	%eax,-4(%ebp)
	jmp	5665
# directivestage_destroy_endwhile_38	:	 [@5747]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	call	4468
	addl	$4,%esp

	movl	$0,%eax
	jmp	5757
# directivestage_destroy_ret	:	 [@5757]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	directivestage_addDefine [@5760]
# .type	directivestage_addDefine,@function
# directivestage_addDefine	:	 [@5760]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$16,%esp

	subl	$4,%esp
	movl	$856,0(%esp)
	call	malloc
	addl	$4,%esp
	movl	%eax,-12(%ebp)

	movl	-12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	5773
	movl	$0,%eax
# directivestage_addDefine_reltrue_45	:	 [@5773]
	testl	%eax,%eax
	jnz	5776
	jmp	5788
# directivestage_addDefine_ifbl_44	:	 [@5776]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11725,4(%esp)
	movl	$0,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	5920
# directivestage_addDefine_elsebl_44	:	 [@5788]
# directivestage_addDefine_endif_44	:	 [@5788]

	subl	$12,%esp
	movl	-12(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$856,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-4(%ebp)

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	movl	%eax,-8(%ebp)

# directivestage_addDefine_while_46	:	 [@5802]
	movl	-4(%ebp),%ebx
	cmpl	-8(%ebp),%ebx
	movl	$1,%eax
	jle	5807
	movl	$0,%eax
# directivestage_addDefine_reltrue_47	:	 [@5807]
	testl	%eax,%eax
	jz	5867

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	movl	%eax,-16(%ebp)

	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	popl	%esi
	addl	%esi,%eax
	movb	(%eax),%al
	popl	%ebx
	movb	%al,(%ebx)

	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$1,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$5,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-16,%eax
	movl	(%eax),%eax
	addl	$9,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)
	jmp	5802
# directivestage_addDefine_endwhile_46	:	 [@5867]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,4(%esp)
	call	2115
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	5882
	movl	$0,%eax
# directivestage_addDefine_reltrue_49	:	 [@5882]
	testl	%eax,%eax
	jnz	5885
	jmp	5902
# directivestage_addDefine_ifbl_48	:	 [@5885]

	subl	$4,%esp
	movl	-12(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11755,4(%esp)
	movl	$0,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10503,%ebx
	movl	%ebx,%eax
	jmp	5920
# directivestage_addDefine_elsebl_48	:	 [@5902]
# directivestage_addDefine_endif_48	:	 [@5902]

	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	movl	-12(%ebp),%eax
	movl	%eax,4(%esp)
	call	4600
	addl	$8,%esp

	movl	$0,%eax
	jmp	5920
# directivestage_addDefine_ret	:	 [@5920]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isDirectiveLine [@5923]
# .type	isDirectiveLine,@function
# isDirectiveLine	:	 [@5923]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$17,%esp

	movl	$0,-4(%ebp)

# isDirectiveLine_while_50	:	 [@5927]
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	5938
	movl	$0,%eax
# isDirectiveLine_reltrue_51	:	 [@5938]
	testl	%eax,%eax
	jz	6013

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isblank
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	5982
	movl	$0,%eax
# isDirectiveLine_reltrue_55	:	 [@5982]
	testl	%eax,%eax
	jnz	5998
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	5994
	movl	$0,%eax
# isDirectiveLine_reltrue_56	:	 [@5994]
	testl	%eax,%eax
	jnz	5998
	movl	$0,%eax
	jmp	5999
# isDirectiveLine_logexprtrue_54	:	 [@5998]
	movl	$1,%eax
# isDirectiveLine_logexprfalse_54	:	 [@5999]
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	6004
	movl	$0,%eax
# isDirectiveLine_reltrue_53	:	 [@6004]
	testl	%eax,%eax
	jnz	6007
	jmp	6008
# isDirectiveLine_ifbl_52	:	 [@6007]
	jmp	6013
# isDirectiveLine_elsebl_52	:	 [@6008]
# isDirectiveLine_endif_52	:	 [@6008]

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)
	jmp	5927
# isDirectiveLine_endwhile_50	:	 [@6013]

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$35,%ebx
	movl	$1,%eax
	je	6051
	movl	$0,%eax
# isDirectiveLine_reltrue_58	:	 [@6051]
	testl	%eax,%eax
	jnz	6054
	jmp	6066
# isDirectiveLine_ifbl_57	:	 [@6054]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	6068
# isDirectiveLine_elsebl_57	:	 [@6066]
# isDirectiveLine_endif_57	:	 [@6066]

	movl	$0,%eax
	jmp	6068
# isDirectiveLine_ret	:	 [@6068]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	cmpDirectiveLine [@6071]
# .type	cmpDirectiveLine,@function
# cmpDirectiveLine	:	 [@6071]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$13,%esp

	subl	$16,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	movl	%eax,8(%esp)
	movl	12(%ebp),%eax
	movl	%eax,12(%esp)
	call	1206
	addl	$16,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	6101
	movl	$0,%eax
# cmpDirectiveLine_reltrue_60	:	 [@6101]
	testl	%eax,%eax
	jnz	6104
	jmp	6210
# cmpDirectiveLine_ifbl_59	:	 [@6104]

	movl	%ebp,%eax
	addl	$-13,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	popl	%ebx
	addl	%eax,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isblank
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	6160
	movl	$0,%eax
# cmpDirectiveLine_reltrue_64	:	 [@6160]
	testl	%eax,%eax
	jnz	6176
	movl	%ebp,%eax
	addl	$-13,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	6172
	movl	$0,%eax
# cmpDirectiveLine_reltrue_65	:	 [@6172]
	testl	%eax,%eax
	jnz	6176
	movl	$0,%eax
	jmp	6177
# cmpDirectiveLine_logexprtrue_63	:	 [@6176]
	movl	$1,%eax
# cmpDirectiveLine_logexprfalse_63	:	 [@6177]
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	6182
	movl	$0,%eax
# cmpDirectiveLine_reltrue_62	:	 [@6182]
	testl	%eax,%eax
	jnz	6185
	jmp	6209
# cmpDirectiveLine_ifbl_61	:	 [@6185]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	popl	%ebx
	addl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$1,%eax
	jmp	6212
# cmpDirectiveLine_elsebl_61	:	 [@6209]
# cmpDirectiveLine_endif_61	:	 [@6209]
	jmp	6210
# cmpDirectiveLine_elsebl_59	:	 [@6210]
# cmpDirectiveLine_endif_59	:	 [@6210]

	movl	$0,%eax
	jmp	6212
# cmpDirectiveLine_ret	:	 [@6212]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isIncludeDirective [@6215]
# .type	isIncludeDirective,@function
# isIncludeDirective	:	 [@6215]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11800,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6225
# isIncludeDirective_ret	:	 [@6225]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isDefineDirective [@6228]
# .type	isDefineDirective,@function
# isDefineDirective	:	 [@6228]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11808,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6238
# isDefineDirective_ret	:	 [@6238]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isIfdefDirective [@6241]
# .type	isIfdefDirective,@function
# isIfdefDirective	:	 [@6241]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11815,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6251
# isIfdefDirective_ret	:	 [@6251]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isIfndefDirective [@6254]
# .type	isIfndefDirective,@function
# isIfndefDirective	:	 [@6254]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11821,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6264
# isIfndefDirective_ret	:	 [@6264]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isElseDirective [@6267]
# .type	isElseDirective,@function
# isElseDirective	:	 [@6267]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11828,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6277
# isElseDirective_ret	:	 [@6277]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isEndifDirective [@6280]
# .type	isEndifDirective,@function
# isEndifDirective	:	 [@6280]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11833,4(%esp)
	call	6071
	addl	$8,%esp
	jmp	6290
# isEndifDirective_ret	:	 [@6290]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getIncludeProcessed [@6293]
# .type	getIncludeProcessed,@function
# getIncludeProcessed	:	 [@6293]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$86,%esp

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	movl	$0,-8(%ebp)

	movb	$34,-9(%ebp)

	movl	%ebp,%eax
	addl	$-86,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-86,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$60,%ebx
	movl	$1,%eax
	je	6346
	movl	$0,%eax
# getIncludeProcessed_reltrue_67	:	 [@6346]
	testl	%eax,%eax
	jnz	6349
	jmp	6352
# getIncludeProcessed_ifbl_66	:	 [@6349]

	movl	$1,-8(%ebp)

	movb	$62,-9(%ebp)
	jmp	6378
# getIncludeProcessed_elsebl_66	:	 [@6352]

	movl	%ebp,%eax
	addl	$-86,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$34,%ebx
	movl	$1,%eax
	jne	6362
	movl	$0,%eax
# getIncludeProcessed_reltrue_69	:	 [@6362]
	testl	%eax,%eax
	jnz	6365
	jmp	6378
# getIncludeProcessed_ifbl_68	:	 [@6365]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11839,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10505,%ebx
	movl	%ebx,%eax
	jmp	6547
# getIncludeProcessed_elsebl_68	:	 [@6378]
# getIncludeProcessed_endif_68	:	 [@6378]
# getIncludeProcessed_endif_66	:	 [@6378]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-73,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$64,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-4(%ebp)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

# getIncludeProcessed_while_70	:	 [@6402]
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	6421
	movl	$0,%eax
# getIncludeProcessed_reltrue_71	:	 [@6421]
	testl	%eax,%eax
	jz	6508

	movl	%ebp,%eax
	addl	$-86,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	-4(%ebp),%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-86,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	movsbl	-9(%ebp),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	6471
	movl	$0,%eax
# getIncludeProcessed_reltrue_73	:	 [@6471]
	testl	%eax,%eax
	jnz	6474
	jmp	6475
# getIncludeProcessed_ifbl_72	:	 [@6474]
	jmp	6508
# getIncludeProcessed_elsebl_72	:	 [@6475]
# getIncludeProcessed_endif_72	:	 [@6475]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$-86,%eax
	addl	$0,%eax
	movb	(%eax),%al
	popl	%esi
	movb	%al,-73(%ebp,%esi,1)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$64,%ebx
	movl	$1,%eax
	je	6491
	movl	$0,%eax
# getIncludeProcessed_reltrue_75	:	 [@6491]
	testl	%eax,%eax
	jnz	6494
	jmp	6507
# getIncludeProcessed_ifbl_74	:	 [@6494]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11871,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10501,%ebx
	movl	%ebx,%eax
	jmp	6547
# getIncludeProcessed_elsebl_74	:	 [@6507]
# getIncludeProcessed_endif_74	:	 [@6507]
	jmp	6402
# getIncludeProcessed_endwhile_70	:	 [@6508]

	movl	%ebp,%eax
	addl	$-86,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	pushl	%eax
	movsbl	-9(%ebp),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	6520
	movl	$0,%eax
# getIncludeProcessed_reltrue_77	:	 [@6520]
	testl	%eax,%eax
	jnz	6523
	jmp	6536
# getIncludeProcessed_ifbl_76	:	 [@6523]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11839,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10505,%ebx
	movl	%ebx,%eax
	jmp	6547
# getIncludeProcessed_elsebl_76	:	 [@6536]
# getIncludeProcessed_endif_76	:	 [@6536]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-73,%eax
	movl	%eax,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	10324
	addl	$12,%esp
	jmp	6547
# getIncludeProcessed_ret	:	 [@6547]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getMacroValue [@6550]
# .type	getMacroValue,@function
# getMacroValue	:	 [@6550]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$484,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	pushl	%eax
	subl	$4,%esp
	movl	$13,0(%esp)
	call	malloc
	addl	$4,%esp
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	6574
	movl	$0,%eax
# getMacroValue_reltrue_79	:	 [@6574]
	testl	%eax,%eax
	jnz	6577
	jmp	6595
# getMacroValue_ifbl_78	:	 [@6577]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11725,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	7222
# getMacroValue_elsebl_78	:	 [@6595]
# getMacroValue_endif_78	:	 [@6595]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-432,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$32,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-8(%ebp)

	movl	$0,-12(%ebp)

# getMacroValue_while_80	:	 [@6619]
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	6635
	movl	$0,%eax
# getMacroValue_reltrue_81	:	 [@6635]
	testl	%eax,%eax
	jz	7067

	movl	%ebp,%eax
	addl	$-445,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-458,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-471,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-445,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$92,%ebx
	movl	$1,%eax
	jne	6752
	movl	$0,%eax
# getMacroValue_reltrue_84	:	 [@6752]
	testl	%eax,%eax
	jz	6768
	movl	%ebp,%eax
	addl	$-458,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	6764
	movl	$0,%eax
# getMacroValue_reltrue_85	:	 [@6764]
	testl	%eax,%eax
	jz	6768
	movl	$1,%eax
	jmp	6769
# getMacroValue_logtermfalse_83	:	 [@6768]
	movl	$0,%eax
# getMacroValue_logtermtrue_83	:	 [@6769]
	testl	%eax,%eax
	jnz	6772
	jmp	6773
# getMacroValue_ifbl_82	:	 [@6772]
	jmp	7067
# getMacroValue_elsebl_82	:	 [@6773]
# getMacroValue_endif_82	:	 [@6773]

	movl	$0,-16(%ebp)

	movl	%ebp,%eax
	addl	$-458,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$92,%ebx
	movl	$1,%eax
	je	6784
	movl	$0,%eax
# getMacroValue_reltrue_88	:	 [@6784]
	testl	%eax,%eax
	jz	6800
	movl	%ebp,%eax
	addl	$-471,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	6796
	movl	$0,%eax
# getMacroValue_reltrue_89	:	 [@6796]
	testl	%eax,%eax
	jz	6800
	movl	$1,%eax
	jmp	6801
# getMacroValue_logtermfalse_87	:	 [@6800]
	movl	$0,%eax
# getMacroValue_logtermtrue_87	:	 [@6801]
	testl	%eax,%eax
	jnz	6804
	jmp	6821
# getMacroValue_ifbl_86	:	 [@6804]

	movl	$1,-16(%ebp)

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	6821
# getMacroValue_elsebl_86	:	 [@6821]
# getMacroValue_endif_86	:	 [@6821]

	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$-432,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	-8(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)

	movl	%ebp,%eax
	addl	$-484,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$-432,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-484,%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

	pushl	-8(%ebp)
	movl	$32,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	6917
	movl	$0,%eax
# getMacroValue_reltrue_91	:	 [@6917]
	testl	%eax,%eax
	jnz	6920
	jmp	7038
# getMacroValue_ifbl_90	:	 [@6920]

	movl	-12(%ebp),%ebx
	addl	-8(%ebp),%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	pushl	%eax
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	pushl	$13
	movl	-12(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	imull	%eax,%ebx
	movl	%ebx,%eax
	movl	%eax,4(%esp)
	call	realloc
	addl	$8,%esp
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	6958
	movl	$0,%eax
# getMacroValue_reltrue_93	:	 [@6958]
	testl	%eax,%eax
	jnz	6961
	jmp	6979
# getMacroValue_ifbl_92	:	 [@6961]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11725,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	7222
# getMacroValue_elsebl_92	:	 [@6979]
# getMacroValue_endif_92	:	 [@6979]

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-432,%eax
	movl	%eax,4(%esp)
	call	1895
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-484,%eax
	pushl	%eax
	pushl	-12(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-484,%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-432,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$32,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-8(%ebp)
	jmp	7038
# getMacroValue_elsebl_90	:	 [@7038]
# getMacroValue_endif_90	:	 [@7038]

	movl	-16(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7043
	movl	$0,%eax
# getMacroValue_reltrue_95	:	 [@7043]
	testl	%eax,%eax
	jnz	7046
	jmp	7066
# getMacroValue_ifbl_94	:	 [@7046]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7060
	movl	$0,%eax
# getMacroValue_reltrue_97	:	 [@7060]
	testl	%eax,%eax
	jnz	7063
	jmp	7065
# getMacroValue_ifbl_96	:	 [@7063]

	movl	-4(%ebp),%eax
	jmp	7222
# getMacroValue_elsebl_96	:	 [@7065]
# getMacroValue_endif_96	:	 [@7065]
	jmp	7066
# getMacroValue_elsebl_94	:	 [@7066]
# getMacroValue_endif_94	:	 [@7066]
	jmp	6619
# getMacroValue_endwhile_80	:	 [@7067]

	movl	%ebp,%eax
	addl	$-484,%eax
	pushl	%eax
	pushl	$0
	movl	%ebp,%eax
	addl	$-432,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-484,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7103
	movl	$0,%eax
# getMacroValue_reltrue_99	:	 [@7103]
	testl	%eax,%eax
	jnz	7106
	jmp	7212
# getMacroValue_ifbl_98	:	 [@7106]

	movl	-12(%ebp),%ebx
	addl	-8(%ebp),%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	pushl	%eax
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	pushl	$13
	movl	-12(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	imull	%eax,%ebx
	movl	%ebx,%eax
	movl	%eax,4(%esp)
	call	realloc
	addl	$8,%esp
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	7144
	movl	$0,%eax
# getMacroValue_reltrue_101	:	 [@7144]
	testl	%eax,%eax
	jnz	7147
	jmp	7165
# getMacroValue_ifbl_100	:	 [@7147]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11725,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	7222
# getMacroValue_elsebl_100	:	 [@7165]
# getMacroValue_endif_100	:	 [@7165]

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-432,%eax
	movl	%eax,4(%esp)
	call	1895
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-484,%eax
	pushl	%eax
	pushl	-12(%ebp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$832,%eax
	movl	(%eax),%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-484,%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)
	jmp	7212
# getMacroValue_elsebl_98	:	 [@7212]
# getMacroValue_endif_98	:	 [@7212]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$0,%eax
	jmp	7222
# getMacroValue_ret	:	 [@7222]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getDefineProcessed [@7225]
# .type	getDefineProcessed,@function
# getDefineProcessed	:	 [@7225]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$853,%esp

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	540
	addl	$4,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-836,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$64,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-836,%eax
	movl	%eax,0(%esp)
	movl	$64,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	2166
	addl	$12,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7258
	movl	$0,%eax
# getDefineProcessed_reltrue_103	:	 [@7258]
	testl	%eax,%eax
	jnz	7261
	jmp	7274
# getDefineProcessed_ifbl_102	:	 [@7261]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11914,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10506,%ebx
	movl	%ebx,%eax
	jmp	7540
# getDefineProcessed_elsebl_102	:	 [@7274]
# getDefineProcessed_endif_102	:	 [@7274]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-836,%eax
	movl	%eax,4(%esp)
	call	2115
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7287
	movl	$0,%eax
# getDefineProcessed_reltrue_105	:	 [@7287]
	testl	%eax,%eax
	jnz	7290
	jmp	7322
# getDefineProcessed_ifbl_104	:	 [@7290]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11949,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	922
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7313
	movl	$0,%eax
# getDefineProcessed_reltrue_107	:	 [@7313]
	testl	%eax,%eax
	jnz	7316
	jmp	7318
# getDefineProcessed_ifbl_106	:	 [@7316]

	movl	-4(%ebp),%eax
	jmp	7540
# getDefineProcessed_elsebl_106	:	 [@7318]
# getDefineProcessed_endif_106	:	 [@7318]

	movl	$0,%ebx
	subl	$10503,%ebx
	movl	%ebx,%eax
	jmp	7540
# getDefineProcessed_elsebl_104	:	 [@7322]
# getDefineProcessed_endif_104	:	 [@7322]

	subl	$4,%esp
	movl	$856,0(%esp)
	call	malloc
	addl	$4,%esp
	movl	%eax,-840(%ebp)

	movl	-840(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	7332
	movl	$0,%eax
# getDefineProcessed_reltrue_109	:	 [@7332]
	testl	%eax,%eax
	jnz	7335
	jmp	7348
# getDefineProcessed_ifbl_108	:	 [@7335]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11725,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$2,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	7540
# getDefineProcessed_elsebl_108	:	 [@7348]
# getDefineProcessed_endif_108	:	 [@7348]

	subl	$12,%esp
	movl	-840(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$856,8(%esp)
	call	memset
	addl	$12,%esp

	movl	%ebp,%eax
	addl	$-840,%eax
	movl	(%eax),%eax
	addl	$836,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-836,%eax
	movl	%eax,4(%esp)
	call	1751
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-853,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-853,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$40,%ebx
	movl	$1,%eax
	jne	7415
	movl	$0,%eax
# getDefineProcessed_reltrue_112	:	 [@7415]
	testl	%eax,%eax
	jz	7457
	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-853,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,0(%esp)
	call	isblank
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7431
	movl	$0,%eax
# getDefineProcessed_reltrue_115	:	 [@7431]
	testl	%eax,%eax
	jnz	7447
	movl	%ebp,%eax
	addl	$-853,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	7443
	movl	$0,%eax
# getDefineProcessed_reltrue_116	:	 [@7443]
	testl	%eax,%eax
	jnz	7447
	movl	$0,%eax
	jmp	7448
# getDefineProcessed_logexprtrue_114	:	 [@7447]
	movl	$1,%eax
# getDefineProcessed_logexprfalse_114	:	 [@7448]
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	7453
	movl	$0,%eax
# getDefineProcessed_reltrue_113	:	 [@7453]
	testl	%eax,%eax
	jz	7457
	movl	$1,%eax
	jmp	7458
# getDefineProcessed_logtermfalse_111	:	 [@7457]
	movl	$0,%eax
# getDefineProcessed_logtermtrue_111	:	 [@7458]
	testl	%eax,%eax
	jnz	7461
	jmp	7474
# getDefineProcessed_ifbl_110	:	 [@7461]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$11971,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10506,%ebx
	movl	%ebx,%eax
	jmp	7540
# getDefineProcessed_elsebl_110	:	 [@7474]
# getDefineProcessed_endif_110	:	 [@7474]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	(%eax),%eax
	addl	$840,%eax
	movl	%eax,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	2724
	addl	$16,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7493
	movl	$0,%eax
# getDefineProcessed_reltrue_118	:	 [@7493]
	testl	%eax,%eax
	jnz	7496
	jmp	7503
# getDefineProcessed_ifbl_117	:	 [@7496]

	subl	$4,%esp
	movl	-840(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	movl	-4(%ebp),%eax
	jmp	7540
# getDefineProcessed_elsebl_117	:	 [@7503]
# getDefineProcessed_endif_117	:	 [@7503]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-840(%ebp),%eax
	movl	%eax,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	6550
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7518
	movl	$0,%eax
# getDefineProcessed_reltrue_120	:	 [@7518]
	testl	%eax,%eax
	jnz	7521
	jmp	7528
# getDefineProcessed_ifbl_119	:	 [@7521]

	subl	$4,%esp
	movl	-840(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	movl	-4(%ebp),%eax
	jmp	7540
# getDefineProcessed_elsebl_119	:	 [@7528]
# getDefineProcessed_endif_119	:	 [@7528]

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13944,%eax
	movl	%eax,0(%esp)
	movl	-840(%ebp),%eax
	movl	%eax,4(%esp)
	call	4600
	addl	$8,%esp

	movl	$0,%eax
	jmp	7540
# getDefineProcessed_ret	:	 [@7540]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	pushBranchStack [@7543]
# .type	pushBranchStack,@function
# pushBranchStack	:	 [@7543]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
# pushBranchStack_ret	:	 [@7578]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	popBranchStack [@7581]
# .type	popBranchStack,@function
# popBranchStack	:	 [@7581]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	movl	12(%ebp),%ebx
	cmpl	$3,%ebx
	movl	$1,%eax
	je	7598
	movl	$0,%eax
# popBranchStack_reltrue_122	:	 [@7598]
	testl	%eax,%eax
	jnz	7601
	jmp	7650
# popBranchStack_ifbl_121	:	 [@7601]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	jne	7615
	movl	$0,%eax
# popBranchStack_reltrue_125	:	 [@7615]
	testl	%eax,%eax
	jz	7635
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$2,%ebx
	movl	$1,%eax
	jne	7631
	movl	$0,%eax
# popBranchStack_reltrue_126	:	 [@7631]
	testl	%eax,%eax
	jz	7635
	movl	$1,%eax
	jmp	7636
# popBranchStack_logtermfalse_124	:	 [@7635]
	movl	$0,%eax
# popBranchStack_logtermtrue_124	:	 [@7636]
	testl	%eax,%eax
	jnz	7639
	jmp	7649
# popBranchStack_ifbl_123	:	 [@7639]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12002,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	jmp	7769
# popBranchStack_elsebl_123	:	 [@7649]
# popBranchStack_endif_123	:	 [@7649]
	jmp	7650
# popBranchStack_elsebl_121	:	 [@7650]
# popBranchStack_endif_121	:	 [@7650]

	movl	12(%ebp),%ebx
	cmpl	$4,%ebx
	movl	$1,%eax
	je	7655
	movl	$0,%eax
# popBranchStack_reltrue_128	:	 [@7655]
	testl	%eax,%eax
	jnz	7658
	jmp	7723
# popBranchStack_ifbl_127	:	 [@7658]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	jne	7672
	movl	$0,%eax
# popBranchStack_reltrue_131	:	 [@7672]
	testl	%eax,%eax
	jz	7708
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$2,%ebx
	movl	$1,%eax
	jne	7688
	movl	$0,%eax
# popBranchStack_reltrue_132	:	 [@7688]
	testl	%eax,%eax
	jz	7708
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$3,%ebx
	movl	$1,%eax
	jne	7704
	movl	$0,%eax
# popBranchStack_reltrue_133	:	 [@7704]
	testl	%eax,%eax
	jz	7708
	movl	$1,%eax
	jmp	7709
# popBranchStack_logtermfalse_130	:	 [@7708]
	movl	$0,%eax
# popBranchStack_logtermtrue_130	:	 [@7709]
	testl	%eax,%eax
	jnz	7712
	jmp	7722
# popBranchStack_ifbl_129	:	 [@7712]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12049,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	jmp	7769
# popBranchStack_elsebl_129	:	 [@7722]
# popBranchStack_endif_129	:	 [@7722]
	jmp	7723
# popBranchStack_elsebl_127	:	 [@7723]
# popBranchStack_endif_127	:	 [@7723]

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jl	7728
	movl	$0,%eax
# popBranchStack_reltrue_135	:	 [@7728]
	testl	%eax,%eax
	jnz	7731
	jmp	7747
# popBranchStack_ifbl_134	:	 [@7731]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12097,4(%esp)
	movl	16(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	jmp	7769
# popBranchStack_elsebl_134	:	 [@7747]
# popBranchStack_endif_134	:	 [@7747]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	pushl	%eax
	movl	-4(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# popBranchStack_ret	:	 [@7769]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	disposeUntilBranchEnds [@7772]
# .type	disposeUntilBranchEnds,@function
# disposeUntilBranchEnds	:	 [@7772]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$8,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)

# disposeUntilBranchEnds_while_136	:	 [@7784]
	movl	$1,%eax
	testl	%eax,%eax
	jz	7979

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	7801
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_138	:	 [@7801]
	testl	%eax,%eax
	jnz	7804
	jmp	7806
# disposeUntilBranchEnds_ifbl_137	:	 [@7804]

	movl	-4(%ebp),%eax
	jmp	7987
# disposeUntilBranchEnds_elsebl_137	:	 [@7806]
# disposeUntilBranchEnds_endif_137	:	 [@7806]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	5923
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7816
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_140	:	 [@7816]
	testl	%eax,%eax
	jnz	7819
	jmp	7978
# disposeUntilBranchEnds_ifbl_139	:	 [@7819]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	6241
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7829
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_142	:	 [@7829]
	testl	%eax,%eax
	jnz	7832
	jmp	7841
# disposeUntilBranchEnds_ifbl_141	:	 [@7832]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp
	jmp	7915
# disposeUntilBranchEnds_elsebl_141	:	 [@7841]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	6254
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7851
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_144	:	 [@7851]
	testl	%eax,%eax
	jnz	7854
	jmp	7863
# disposeUntilBranchEnds_ifbl_143	:	 [@7854]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp
	jmp	7915
# disposeUntilBranchEnds_elsebl_143	:	 [@7863]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	6267
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7873
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_146	:	 [@7873]
	testl	%eax,%eax
	jnz	7876
	jmp	7893
# disposeUntilBranchEnds_ifbl_145	:	 [@7876]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	7581
	addl	$12,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp
	jmp	7915
# disposeUntilBranchEnds_elsebl_145	:	 [@7893]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	6280
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	7903
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_148	:	 [@7903]
	testl	%eax,%eax
	jnz	7906
	jmp	7915
# disposeUntilBranchEnds_ifbl_147	:	 [@7906]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	7581
	addl	$12,%esp
	jmp	7915
# disposeUntilBranchEnds_elsebl_147	:	 [@7915]
# disposeUntilBranchEnds_endif_147	:	 [@7915]
# disposeUntilBranchEnds_endif_145	:	 [@7915]
# disposeUntilBranchEnds_endif_143	:	 [@7915]
# disposeUntilBranchEnds_endif_141	:	 [@7915]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$13952,%eax
	popl	%esi
	imull	$4,%esi
	addl	%esi,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$3,%ebx
	movl	$1,%eax
	je	7937
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_151	:	 [@7937]
	testl	%eax,%eax
	jz	7957
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	7953
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_152	:	 [@7953]
	testl	%eax,%eax
	jz	7957
	movl	$1,%eax
	jmp	7958
# disposeUntilBranchEnds_logtermfalse_150	:	 [@7957]
	movl	$0,%eax
# disposeUntilBranchEnds_logtermtrue_150	:	 [@7958]
	testl	%eax,%eax
	jnz	7961
	jmp	7962
# disposeUntilBranchEnds_ifbl_149	:	 [@7961]
	jmp	7979
# disposeUntilBranchEnds_elsebl_149	:	 [@7962]
# disposeUntilBranchEnds_endif_149	:	 [@7962]

	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	7973
	movl	$0,%eax
# disposeUntilBranchEnds_reltrue_154	:	 [@7973]
	testl	%eax,%eax
	jnz	7976
	jmp	7977
# disposeUntilBranchEnds_ifbl_153	:	 [@7976]
	jmp	7979
# disposeUntilBranchEnds_elsebl_153	:	 [@7977]
# disposeUntilBranchEnds_endif_153	:	 [@7977]
	jmp	7978
# disposeUntilBranchEnds_elsebl_139	:	 [@7978]
# disposeUntilBranchEnds_endif_139	:	 [@7978]
	jmp	7784
# disposeUntilBranchEnds_endwhile_136	:	 [@7979]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	$0,%eax
	jmp	7987
# disposeUntilBranchEnds_ret	:	 [@7987]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	directivestage_getNext [@7990]
# .type	directivestage_getNext,@function
# directivestage_getNext	:	 [@7990]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$840,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

# directivestage_getNext_while_155	:	 [@7999]
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8010
	movl	$0,%eax
# directivestage_getNext_reltrue_156	:	 [@8010]
	testl	%eax,%eax
	jz	8543

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$7268,%eax
	movl	%eax,-8(%ebp)

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	8033
	movl	$0,%eax
# directivestage_getNext_reltrue_158	:	 [@8033]
	testl	%eax,%eax
	jnz	8036
	jmp	8082
# directivestage_getNext_ifbl_157	:	 [@8036]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$7268,%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	8053
	movl	$0,%eax
# directivestage_getNext_reltrue_160	:	 [@8053]
	testl	%eax,%eax
	jnz	8056
	jmp	8081
# directivestage_getNext_ifbl_159	:	 [@8056]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$14032,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	8066
	movl	$0,%eax
# directivestage_getNext_reltrue_162	:	 [@8066]
	testl	%eax,%eax
	jnz	8069
	jmp	8079
# directivestage_getNext_ifbl_161	:	 [@8069]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12137,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp
	jmp	8079
# directivestage_getNext_elsebl_161	:	 [@8079]
# directivestage_getNext_endif_161	:	 [@8079]

	movl	-4(%ebp),%eax
	jmp	8545
# directivestage_getNext_elsebl_159	:	 [@8081]
# directivestage_getNext_endif_159	:	 [@8081]
	jmp	8082
# directivestage_getNext_elsebl_157	:	 [@8082]
# directivestage_getNext_endif_157	:	 [@8082]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,0(%esp)
	call	401
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8100
	movl	$0,%eax
# directivestage_getNext_reltrue_165	:	 [@8100]
	testl	%eax,%eax
	jz	8116
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8112
	movl	$0,%eax
# directivestage_getNext_reltrue_166	:	 [@8112]
	testl	%eax,%eax
	jz	8116
	movl	$1,%eax
	jmp	8117
# directivestage_getNext_logtermfalse_164	:	 [@8116]
	movl	$0,%eax
# directivestage_getNext_logtermtrue_164	:	 [@8117]
	testl	%eax,%eax
	jnz	8120
	jmp	8493
# directivestage_getNext_ifbl_163	:	 [@8120]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	5923
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8130
	movl	$0,%eax
# directivestage_getNext_reltrue_168	:	 [@8130]
	testl	%eax,%eax
	jnz	8133
	jmp	8492
# directivestage_getNext_ifbl_167	:	 [@8133]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6215
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8143
	movl	$0,%eax
# directivestage_getNext_reltrue_170	:	 [@8143]
	testl	%eax,%eax
	jnz	8146
	jmp	8175
# directivestage_getNext_ifbl_169	:	 [@8146]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	call	6293
	addl	$8,%esp
	movl	%eax,-4(%ebp)

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	282
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8164
	movl	$0,%eax
# directivestage_getNext_reltrue_172	:	 [@8164]
	testl	%eax,%eax
	jnz	8167
	jmp	8169
# directivestage_getNext_ifbl_171	:	 [@8167]

	movl	-4(%ebp),%eax
	jmp	8545
# directivestage_getNext_elsebl_171	:	 [@8169]
# directivestage_getNext_endif_171	:	 [@8169]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
	jmp	8491
# directivestage_getNext_elsebl_169	:	 [@8175]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6228
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8185
	movl	$0,%eax
# directivestage_getNext_reltrue_174	:	 [@8185]
	testl	%eax,%eax
	jnz	8188
	jmp	8220
# directivestage_getNext_ifbl_173	:	 [@8188]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$7268,%eax
	movl	%eax,4(%esp)
	call	7225
	addl	$8,%esp
	movl	%eax,-4(%ebp)

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	282
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8209
	movl	$0,%eax
# directivestage_getNext_reltrue_176	:	 [@8209]
	testl	%eax,%eax
	jnz	8212
	jmp	8214
# directivestage_getNext_ifbl_175	:	 [@8212]

	movl	-4(%ebp),%eax
	jmp	8545
# directivestage_getNext_elsebl_175	:	 [@8214]
# directivestage_getNext_endif_175	:	 [@8214]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
	jmp	8491
# directivestage_getNext_elsebl_173	:	 [@8220]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6241
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8230
	movl	$0,%eax
# directivestage_getNext_reltrue_178	:	 [@8230]
	testl	%eax,%eax
	jnz	8233
	jmp	8314
# directivestage_getNext_ifbl_177	:	 [@8233]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$64,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,0(%esp)
	movl	$64,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	2166
	addl	$12,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	8258
	movl	$0,%eax
# directivestage_getNext_reltrue_180	:	 [@8258]
	testl	%eax,%eax
	jnz	8261
	jmp	8276
# directivestage_getNext_ifbl_179	:	 [@8261]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12216,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp
	jmp	8313
# directivestage_getNext_elsebl_179	:	 [@8276]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,4(%esp)
	call	2115
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8297
	movl	$0,%eax
# directivestage_getNext_reltrue_182	:	 [@8297]
	testl	%eax,%eax
	jnz	8300
	jmp	8308
# directivestage_getNext_ifbl_181	:	 [@8300]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	call	7772
	addl	$8,%esp
	jmp	8308
# directivestage_getNext_elsebl_181	:	 [@8308]
# directivestage_getNext_endif_181	:	 [@8308]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
# directivestage_getNext_endif_179	:	 [@8313]
	jmp	8491
# directivestage_getNext_elsebl_177	:	 [@8314]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6254
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8324
	movl	$0,%eax
# directivestage_getNext_reltrue_184	:	 [@8324]
	testl	%eax,%eax
	jnz	8327
	jmp	8408
# directivestage_getNext_ifbl_183	:	 [@8327]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,%ebx
	imull	$64,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,0(%esp)
	movl	$64,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	2166
	addl	$12,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	8352
	movl	$0,%eax
# directivestage_getNext_reltrue_186	:	 [@8352]
	testl	%eax,%eax
	jnz	8355
	jmp	8370
# directivestage_getNext_ifbl_185	:	 [@8355]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12257,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp
	jmp	8407
# directivestage_getNext_elsebl_185	:	 [@8370]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-840,%eax
	movl	%eax,4(%esp)
	call	2115
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8391
	movl	$0,%eax
# directivestage_getNext_reltrue_188	:	 [@8391]
	testl	%eax,%eax
	jnz	8394
	jmp	8402
# directivestage_getNext_ifbl_187	:	 [@8394]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	call	7772
	addl	$8,%esp
	jmp	8402
# directivestage_getNext_elsebl_187	:	 [@8402]
# directivestage_getNext_endif_187	:	 [@8402]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
# directivestage_getNext_endif_185	:	 [@8407]
	jmp	8491
# directivestage_getNext_elsebl_183	:	 [@8408]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6267
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8418
	movl	$0,%eax
# directivestage_getNext_reltrue_190	:	 [@8418]
	testl	%eax,%eax
	jnz	8421
	jmp	8450
# directivestage_getNext_ifbl_189	:	 [@8421]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	7581
	addl	$12,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	7543
	addl	$12,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,4(%esp)
	call	7772
	addl	$8,%esp

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
	jmp	8491
# directivestage_getNext_elsebl_189	:	 [@8450]

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	6280
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	8460
	movl	$0,%eax
# directivestage_getNext_reltrue_192	:	 [@8460]
	testl	%eax,%eax
	jnz	8463
	jmp	8477
# directivestage_getNext_ifbl_191	:	 [@8463]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	call	7581
	addl	$12,%esp

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
	jmp	8491
# directivestage_getNext_elsebl_191	:	 [@8477]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12299,4(%esp)
	movl	-8(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	3
	addl	$16,%esp

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	680
	addl	$4,%esp
# directivestage_getNext_endif_191	:	 [@8491]
# directivestage_getNext_endif_189	:	 [@8491]
# directivestage_getNext_endif_183	:	 [@8491]
# directivestage_getNext_endif_177	:	 [@8491]
# directivestage_getNext_endif_173	:	 [@8491]
# directivestage_getNext_endif_169	:	 [@8491]
	jmp	8492
# directivestage_getNext_elsebl_167	:	 [@8492]
# directivestage_getNext_endif_167	:	 [@8492]
	jmp	8493
# directivestage_getNext_elsebl_163	:	 [@8493]
# directivestage_getNext_endif_163	:	 [@8493]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	7999
# directivestage_getNext_endwhile_155	:	 [@8543]

	movl	$0,%eax
	jmp	8545
# directivestage_getNext_ret	:	 [@8545]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	commstage_init [@8548]
# .type	commstage_init,@function
# commstage_init	:	 [@8548]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,0(%esp)
	call	358
	addl	$4,%esp

	movl	$0,%eax
	jmp	8561
# commstage_init_ret	:	 [@8561]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	commstage_destroy [@8564]
# .type	commstage_destroy,@function
# commstage_destroy	:	 [@8564]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	$0,%eax
	jmp	8569
# commstage_destroy_ret	:	 [@8569]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	commstage_getNext [@8572]
# .type	commstage_getNext,@function
# commstage_getNext	:	 [@8572]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$34,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

# commstage_getNext_while_0	:	 [@8581]
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8592
	movl	$0,%eax
# commstage_getNext_reltrue_1	:	 [@8592]
	testl	%eax,%eax
	jz	9065

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,-34(%ebp)

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	8615
	movl	$0,%eax
# commstage_getNext_reltrue_3	:	 [@8615]
	testl	%eax,%eax
	jnz	8618
	jmp	8641
# commstage_getNext_ifbl_2	:	 [@8618]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	8635
	movl	$0,%eax
# commstage_getNext_reltrue_5	:	 [@8635]
	testl	%eax,%eax
	jnz	8638
	jmp	8640
# commstage_getNext_ifbl_4	:	 [@8638]

	movl	-4(%ebp),%eax
	jmp	9067
# commstage_getNext_elsebl_4	:	 [@8640]
# commstage_getNext_endif_4	:	 [@8640]
	jmp	8641
# commstage_getNext_elsebl_2	:	 [@8641]
# commstage_getNext_endif_2	:	 [@8641]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,0(%esp)
	call	401
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6664,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	8659
	movl	$0,%eax
# commstage_getNext_reltrue_7	:	 [@8659]
	testl	%eax,%eax
	jnz	8662
	jmp	9015
# commstage_getNext_ifbl_6	:	 [@8662]

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$47,%ebx
	movl	$1,%eax
	je	8741
	movl	$0,%eax
# commstage_getNext_reltrue_10	:	 [@8741]
	testl	%eax,%eax
	jz	8757
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$47,%ebx
	movl	$1,%eax
	je	8753
	movl	$0,%eax
# commstage_getNext_reltrue_11	:	 [@8753]
	testl	%eax,%eax
	jz	8757
	movl	$1,%eax
	jmp	8758
# commstage_getNext_logtermfalse_9	:	 [@8757]
	movl	$0,%eax
# commstage_getNext_logtermtrue_9	:	 [@8758]
	testl	%eax,%eax
	jnz	8761
	jmp	8777
# commstage_getNext_ifbl_8	:	 [@8761]

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9014
# commstage_getNext_elsebl_8	:	 [@8777]

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$47,%ebx
	movl	$1,%eax
	je	8787
	movl	$0,%eax
# commstage_getNext_reltrue_14	:	 [@8787]
	testl	%eax,%eax
	jz	8803
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$42,%ebx
	movl	$1,%eax
	je	8799
	movl	$0,%eax
# commstage_getNext_reltrue_15	:	 [@8799]
	testl	%eax,%eax
	jz	8803
	movl	$1,%eax
	jmp	8804
# commstage_getNext_logtermfalse_13	:	 [@8803]
	movl	$0,%eax
# commstage_getNext_logtermtrue_13	:	 [@8804]
	testl	%eax,%eax
	jnz	8807
	jmp	9014
# commstage_getNext_ifbl_12	:	 [@8807]

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

# commstage_getNext_while_16	:	 [@8822]
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jl	8838
	movl	$0,%eax
# commstage_getNext_reltrue_17	:	 [@8838]
	testl	%eax,%eax
	jz	9013

	movl	%ebp,%eax
	addl	$-17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-30,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$42,%ebx
	movl	$1,%eax
	je	8919
	movl	$0,%eax
# commstage_getNext_reltrue_20	:	 [@8919]
	testl	%eax,%eax
	jz	8935
	movl	%ebp,%eax
	addl	$-30,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$47,%ebx
	movl	$1,%eax
	je	8931
	movl	$0,%eax
# commstage_getNext_reltrue_21	:	 [@8931]
	testl	%eax,%eax
	jz	8935
	movl	$1,%eax
	jmp	8936
# commstage_getNext_logtermfalse_19	:	 [@8935]
	movl	$0,%eax
# commstage_getNext_logtermtrue_19	:	 [@8936]
	testl	%eax,%eax
	jnz	8939
	jmp	8955
# commstage_getNext_ifbl_18	:	 [@8939]

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$2,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9013
# commstage_getNext_elsebl_18	:	 [@8955]
# commstage_getNext_endif_18	:	 [@8955]

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6656,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	8986
	movl	$0,%eax
# commstage_getNext_reltrue_23	:	 [@8986]
	testl	%eax,%eax
	jnz	8989
	jmp	9012
# commstage_getNext_ifbl_22	:	 [@8989]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$592,%eax
	movl	%eax,8(%esp)
	call	783
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9006
	movl	$0,%eax
# commstage_getNext_reltrue_25	:	 [@9006]
	testl	%eax,%eax
	jnz	9009
	jmp	9011
# commstage_getNext_ifbl_24	:	 [@9009]

	movl	-4(%ebp),%eax
	jmp	9067
# commstage_getNext_elsebl_24	:	 [@9011]
# commstage_getNext_endif_24	:	 [@9011]
	jmp	9012
# commstage_getNext_elsebl_22	:	 [@9012]
# commstage_getNext_endif_22	:	 [@9012]
	jmp	8822
# commstage_getNext_endwhile_16	:	 [@9013]
	jmp	9014
# commstage_getNext_elsebl_12	:	 [@9014]
# commstage_getNext_endif_12	:	 [@9014]
# commstage_getNext_endif_8	:	 [@9014]
	jmp	9015
# commstage_getNext_elsebl_6	:	 [@9015]
# commstage_getNext_endif_6	:	 [@9015]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$13,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-34,%eax
	movl	(%eax),%eax
	addl	$6660,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	8581
# commstage_getNext_endwhile_0	:	 [@9065]

	movl	$0,%eax
	jmp	9067
# commstage_getNext_ret	:	 [@9067]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	Clear_FilenamesList [@9070]
# .type	Clear_FilenamesList,@function
# Clear_FilenamesList	:	 [@9070]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Clear_FilenamesList_ret	:	 [@9085]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_Member_Of_FilenamesList [@9088]
# .type	Is_Member_Of_FilenamesList,@function
# Is_Member_Of_FilenamesList	:	 [@9088]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

# Is_Member_Of_FilenamesList_while_0	:	 [@9097]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9102
	movl	$0,%eax
# Is_Member_Of_FilenamesList_reltrue_1	:	 [@9102]
	testl	%eax,%eax
	jz	9121

	movl	-4(%ebp),%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	9109
	movl	$0,%eax
# Is_Member_Of_FilenamesList_reltrue_3	:	 [@9109]
	testl	%eax,%eax
	jnz	9112
	jmp	9114
# Is_Member_Of_FilenamesList_ifbl_2	:	 [@9112]

	movl	$1,%eax
	jmp	9123
# Is_Member_Of_FilenamesList_elsebl_2	:	 [@9114]
# Is_Member_Of_FilenamesList_endif_2	:	 [@9114]

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)
	jmp	9097
# Is_Member_Of_FilenamesList_endwhile_0	:	 [@9121]

	movl	$0,%eax
	jmp	9123
# Is_Member_Of_FilenamesList_ret	:	 [@9123]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Front_Of_FilenamesList [@9126]
# .type	Get_Front_Of_FilenamesList,@function
# Get_Front_Of_FilenamesList	:	 [@9126]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	jmp	9135
# Get_Front_Of_FilenamesList_ret	:	 [@9135]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Back_Of_FilenamesList [@9138]
# .type	Get_Back_Of_FilenamesList,@function
# Get_Back_Of_FilenamesList	:	 [@9138]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	jmp	9147
# Get_Back_Of_FilenamesList_ret	:	 [@9147]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Next_In_FilenamesList [@9150]
# .type	Get_Next_In_FilenamesList,@function
# Get_Next_In_FilenamesList	:	 [@9150]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	jmp	9159
# Get_Next_In_FilenamesList_ret	:	 [@9159]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Next_In_FilenamesList [@9162]
# .type	Set_Next_In_FilenamesList,@function
# Set_Next_In_FilenamesList	:	 [@9162]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Next_In_FilenamesList_ret	:	 [@9173]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Get_Prev_In_FilenamesList [@9176]
# .type	Get_Prev_In_FilenamesList,@function
# Get_Prev_In_FilenamesList	:	 [@9176]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	(%eax),%eax
	jmp	9185
# Get_Prev_In_FilenamesList_ret	:	 [@9185]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Set_Prev_In_FilenamesList [@9188]
# .type	Set_Prev_In_FilenamesList,@function
# Set_Prev_In_FilenamesList	:	 [@9188]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Set_Prev_In_FilenamesList_ret	:	 [@9199]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Front_Of_FilenamesList [@9202]
# .type	Add_To_Front_Of_FilenamesList,@function
# Add_To_Front_Of_FilenamesList	:	 [@9202]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9221
	movl	$0,%eax
# Add_To_Front_Of_FilenamesList_reltrue_5	:	 [@9221]
	testl	%eax,%eax
	jnz	9224
	jmp	9247
# Add_To_Front_Of_FilenamesList_ifbl_4	:	 [@9224]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	9277
# Add_To_Front_Of_FilenamesList_elsebl_4	:	 [@9247]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Front_Of_FilenamesList_endif_4	:	 [@9277]
# Add_To_Front_Of_FilenamesList_ret	:	 [@9277]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_Back_Of_FilenamesList [@9280]
# .type	Add_To_Back_Of_FilenamesList,@function
# Add_To_Back_Of_FilenamesList	:	 [@9280]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9299
	movl	$0,%eax
# Add_To_Back_Of_FilenamesList_reltrue_7	:	 [@9299]
	testl	%eax,%eax
	jnz	9302
	jmp	9325
# Add_To_Back_Of_FilenamesList_ifbl_6	:	 [@9302]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	9355
# Add_To_Back_Of_FilenamesList_elsebl_6	:	 [@9325]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_Back_Of_FilenamesList_endif_6	:	 [@9355]
# Add_To_Back_Of_FilenamesList_ret	:	 [@9355]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Add_To_FilenamesList_After [@9358]
# .type	Add_To_FilenamesList_After,@function
# Add_To_FilenamesList_After	:	 [@9358]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	12(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Add_To_FilenamesList_After_ret	:	 [@9381]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Append_FilenamesList [@9384]
# .type	Append_FilenamesList,@function
# Append_FilenamesList	:	 [@9384]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9397
	movl	$0,%eax
# Append_FilenamesList_reltrue_9	:	 [@9397]
	testl	%eax,%eax
	jnz	9400
	jmp	9479
# Append_FilenamesList_ifbl_8	:	 [@9400]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9410
	movl	$0,%eax
# Append_FilenamesList_reltrue_11	:	 [@9410]
	testl	%eax,%eax
	jnz	9413
	jmp	9438
# Append_FilenamesList_ifbl_10	:	 [@9413]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9478
# Append_FilenamesList_elsebl_10	:	 [@9438]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Append_FilenamesList_endif_10	:	 [@9478]
	jmp	9479
# Append_FilenamesList_elsebl_8	:	 [@9479]
# Append_FilenamesList_endif_8	:	 [@9479]
# Append_FilenamesList_ret	:	 [@9479]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_Front_Of_FilenamesList [@9482]
# .type	Remove_From_Front_Of_FilenamesList,@function
# Remove_From_Front_Of_FilenamesList	:	 [@9482]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,-4(%ebp)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9515
	movl	$0,%eax
# Remove_From_Front_Of_FilenamesList_reltrue_13	:	 [@9515]
	testl	%eax,%eax
	jnz	9518
	jmp	9525
# Remove_From_Front_Of_FilenamesList_ifbl_12	:	 [@9518]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	9533
# Remove_From_Front_Of_FilenamesList_elsebl_12	:	 [@9525]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
# Remove_From_Front_Of_FilenamesList_endif_12	:	 [@9533]

	movl	-4(%ebp),%eax
	jmp	9535
# Remove_From_Front_Of_FilenamesList_ret	:	 [@9535]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Remove_From_FilenamesList [@9538]
# .type	Remove_From_FilenamesList,@function
# Remove_From_FilenamesList	:	 [@9538]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9551
	movl	$0,%eax
# Remove_From_FilenamesList_reltrue_15	:	 [@9551]
	testl	%eax,%eax
	jnz	9554
	jmp	9569
# Remove_From_FilenamesList_ifbl_14	:	 [@9554]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9581
# Remove_From_FilenamesList_elsebl_14	:	 [@9569]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_FilenamesList_endif_14	:	 [@9581]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9591
	movl	$0,%eax
# Remove_From_FilenamesList_reltrue_17	:	 [@9591]
	testl	%eax,%eax
	jnz	9594
	jmp	9609
# Remove_From_FilenamesList_ifbl_16	:	 [@9594]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$264,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9621
# Remove_From_FilenamesList_elsebl_16	:	 [@9609]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$260,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)
# Remove_From_FilenamesList_endif_16	:	 [@9621]
# Remove_From_FilenamesList_ret	:	 [@9621]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	Is_FilenamesList_Empty [@9624]
# .type	Is_FilenamesList_Empty,@function
# Is_FilenamesList_Empty	:	 [@9624]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9637
	movl	$0,%eax
# Is_FilenamesList_Empty_reltrue_18	:	 [@9637]
	jmp	9638
# Is_FilenamesList_Empty_ret	:	 [@9638]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getSystemIncludePaths [@9641]
# .type	getSystemIncludePaths,@function
# getSystemIncludePaths	:	 [@9641]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12347,4(%esp)
	call	strcpy
	addl	$8,%esp
# getSystemIncludePaths_ret	:	 [@9650]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	fstack_init [@9653]
# .type	fstack_init,@function
# fstack_init	:	 [@9653]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9070
	addl	$4,%esp

	movl	$0,%eax
	jmp	9676
# fstack_init_ret	:	 [@9676]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	fstack_destroy [@9679]
# .type	fstack_destroy,@function
# fstack_destroy	:	 [@9679]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$37,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9624
	addl	$4,%esp
	testl	%eax,%eax
	movl	$1,%eax
	jz	9694
	movl	$0,%eax
# fstack_destroy_logfactfalse_20	:	 [@9694]
	testl	%eax,%eax
	jnz	9697
	jmp	9728
# fstack_destroy_ifbl_19	:	 [@9697]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9126
	addl	$4,%esp
	movl	%eax,-4(%ebp)

# fstack_destroy_while_21	:	 [@9706]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9711
	movl	$0,%eax
# fstack_destroy_reltrue_22	:	 [@9711]
	testl	%eax,%eax
	jz	9727

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	9150
	addl	$4,%esp
	movl	%eax,-8(%ebp)

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	free
	addl	$4,%esp

	movl	-8(%ebp),%eax
	movl	%eax,-4(%ebp)
	jmp	9706
# fstack_destroy_endwhile_21	:	 [@9727]
	jmp	9728
# fstack_destroy_elsebl_19	:	 [@9728]
# fstack_destroy_endif_19	:	 [@9728]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9070
	addl	$4,%esp

# fstack_destroy_while_23	:	 [@9736]
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jge	9746
	movl	$0,%eax
# fstack_destroy_reltrue_24	:	 [@9746]
	testl	%eax,%eax
	jz	9846

	movl	%ebp,%eax
	addl	$-37,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	movl	%ebp,%eax
	addl	$-37,%eax
	addl	$0,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	9810
	movl	$0,%eax
# fstack_destroy_reltrue_26	:	 [@9810]
	testl	%eax,%eax
	jnz	9813
	jmp	9830
# fstack_destroy_ifbl_25	:	 [@9813]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-37,%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	call	close
	addl	$4,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-37,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$29,8(%esp)
	call	memset
	addl	$12,%esp
	jmp	9830
# fstack_destroy_elsebl_25	:	 [@9830]
# fstack_destroy_endif_25	:	 [@9830]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)
	jmp	9736
# fstack_destroy_endwhile_23	:	 [@9846]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	$0,%eax
	jmp	9858
# fstack_destroy_ret	:	 [@9858]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	addNewFilenameNode [@9861]
# .type	addNewFilenameNode,@function
# addNewFilenameNode	:	 [@9861]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$12,%esp

	subl	$4,%esp
	movl	$268,0(%esp)
	call	malloc
	addl	$4,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	9874
	movl	$0,%eax
# addNewFilenameNode_reltrue_28	:	 [@9874]
	testl	%eax,%eax
	jnz	9877
	jmp	9889
# addNewFilenameNode_ifbl_27	:	 [@9877]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12358,4(%esp)
	movl	$0,8(%esp)
	movl	$2,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10002,%ebx
	movl	%ebx,%eax
	jmp	10018
# addNewFilenameNode_elsebl_27	:	 [@9889]
# addNewFilenameNode_endif_27	:	 [@9889]

	subl	$12,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$268,8(%esp)
	call	memset
	addl	$12,%esp

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9126
	addl	$4,%esp
	movl	%eax,-8(%ebp)

# addNewFilenameNode_while_29	:	 [@9915]
	movl	-8(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	9920
	movl	$0,%eax
# addNewFilenameNode_reltrue_30	:	 [@9920]
	testl	%eax,%eax
	jz	9941

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$4,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	call	9150
	addl	$4,%esp
	movl	%eax,-8(%ebp)
	jmp	9915
# addNewFilenameNode_endwhile_29	:	 [@9941]

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	movl	%eax,-12(%ebp)

	movl	%ebp,%eax
	addl	$-12,%eax
	movl	(%eax),%eax
	addl	$17,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$1,%ebx
	imull	$256,%ebx
	movl	%ebx,%eax
	movl	%eax,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$256,8(%esp)
	call	strncpy
	addl	$12,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	movl	-4(%ebp),%eax
	movl	%eax,4(%esp)
	call	9280
	addl	$8,%esp

	movl	$0,%eax
	jmp	10018
# addNewFilenameNode_ret	:	 [@10018]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	isFileAlreadyOnStack [@10021]
# .type	isFileAlreadyOnStack,@function
# isFileAlreadyOnStack	:	 [@10021]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$37,%esp

	movl	$0,-4(%ebp)

# isFileAlreadyOnStack_while_31	:	 [@10025]
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jle	10036
	movl	$0,%eax
# isFileAlreadyOnStack_reltrue_32	:	 [@10036]
	testl	%eax,%eax
	jz	10115

	movl	%ebp,%eax
	addl	$-37,%eax
	pushl	%eax
	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	popl	%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movb	(%eax),%cl
	movb	%cl,(%ebx)
	addl	$1,%eax
	addl	$1,%ebx

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-37,%eax
	addl	$17,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	11051
	addl	$8,%esp
	movl	%eax,-8(%ebp)

	subl	$8,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	strcmp
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	10105
	movl	$0,%eax
# isFileAlreadyOnStack_reltrue_34	:	 [@10105]
	testl	%eax,%eax
	jnz	10108
	jmp	10110
# isFileAlreadyOnStack_ifbl_33	:	 [@10108]

	movl	$1,%eax
	jmp	10117
# isFileAlreadyOnStack_elsebl_33	:	 [@10110]
# isFileAlreadyOnStack_endif_33	:	 [@10110]

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)
	jmp	10025
# isFileAlreadyOnStack_endwhile_31	:	 [@10115]

	movl	$0,%eax
	jmp	10117
# isFileAlreadyOnStack_ret	:	 [@10117]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	getAbsoluteIncludePath [@10120]
# .type	getAbsoluteIncludePath,@function
# getAbsoluteIncludePath	:	 [@10120]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$276,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-276,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$256,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$12,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$256,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-276,%eax
	movl	%eax,0(%esp)
	call	9641
	addl	$4,%esp

	movl	$0,-4(%ebp)

	movl	$0,-8(%ebp)

	movl	$0,-20(%ebp)

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-276,%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	movl	%eax,-12(%ebp)

# getAbsoluteIncludePath_while_35	:	 [@10154]
	movl	-8(%ebp),%ebx
	cmpl	-12(%ebp),%ebx
	movl	$1,%eax
	jl	10159
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_36	:	 [@10159]
	testl	%eax,%eax
	jz	10298

	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$-276,%eax
	popl	%esi
	addl	%esi,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$58,%ebx
	movl	$1,%eax
	jne	10173
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_38	:	 [@10173]
	testl	%eax,%eax
	jnz	10176
	jmp	10200
# getAbsoluteIncludePath_ifbl_37	:	 [@10176]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	popl	%esi
	addl	%esi,%eax
	pushl	%eax
	pushl	-8(%ebp)
	movl	%ebp,%eax
	addl	$-276,%eax
	popl	%esi
	addl	%esi,%eax
	movb	(%eax),%al
	popl	%ebx
	movb	%al,(%ebx)

	movl	-8(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)
	jmp	10154
# getAbsoluteIncludePath_elsebl_37	:	 [@10200]
# getAbsoluteIncludePath_endif_37	:	 [@10200]

	movl	-8(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-8(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	jg	10209
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_40	:	 [@10209]
	testl	%eax,%eax
	jnz	10212
	jmp	10297
# getAbsoluteIncludePath_ifbl_39	:	 [@10212]

	pushl	-4(%ebp)
	movl	%ebp,%eax
	addl	$16,%eax
	movl	(%eax),%eax
	popl	%esi
	addl	%esi,%eax
	movl	%eax,%ebx
	movb	$47,(%ebx)

	movl	-4(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-4(%ebp)

	pushl	-4(%ebp)
	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	popl	%ebx
	addl	%eax,%ebx
	movl	%ebx,%eax
	movl	%eax,%ebx
	cmpl	$256,%ebx
	movl	$1,%eax
	jge	10238
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_42	:	 [@10238]
	testl	%eax,%eax
	jnz	10241
	jmp	10254
# getAbsoluteIncludePath_ifbl_41	:	 [@10241]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12388,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10501,%ebx
	movl	%ebx,%eax
	jmp	10321
# getAbsoluteIncludePath_elsebl_41	:	 [@10254]
# getAbsoluteIncludePath_endif_41	:	 [@10254]

	subl	$8,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	strcat
	addl	$8,%esp

	subl	$12,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$0,8(%esp)
	call	open
	addl	$12,%esp
	movl	%eax,-16(%ebp)

	pushl	-16(%ebp)
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	10278
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_44	:	 [@10278]
	testl	%eax,%eax
	jnz	10281
	jmp	10288
# getAbsoluteIncludePath_ifbl_43	:	 [@10281]

	subl	$4,%esp
	movl	-16(%ebp),%eax
	movl	%eax,0(%esp)
	call	close
	addl	$4,%esp

	movl	$1,-20(%ebp)
	jmp	10298
# getAbsoluteIncludePath_elsebl_43	:	 [@10288]
# getAbsoluteIncludePath_endif_43	:	 [@10288]

	subl	$12,%esp
	movl	16(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$256,8(%esp)
	call	memset
	addl	$12,%esp

	movl	$0,-4(%ebp)
	jmp	10297
# getAbsoluteIncludePath_elsebl_39	:	 [@10297]
# getAbsoluteIncludePath_endif_39	:	 [@10297]
	jmp	10154
# getAbsoluteIncludePath_endwhile_35	:	 [@10298]

	movl	-20(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	10303
	movl	$0,%eax
# getAbsoluteIncludePath_reltrue_46	:	 [@10303]
	testl	%eax,%eax
	jnz	10306
	jmp	10319
# getAbsoluteIncludePath_ifbl_45	:	 [@10306]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12436,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10500,%ebx
	movl	%ebx,%eax
	jmp	10321
# getAbsoluteIncludePath_elsebl_45	:	 [@10319]
# getAbsoluteIncludePath_endif_45	:	 [@10319]

	movl	$0,%eax
	jmp	10321
# getAbsoluteIncludePath_ret	:	 [@10321]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	fstack_pushFile [@10324]
# .type	fstack_pushFile,@function
# fstack_pushFile	:	 [@10324]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$276,%esp

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$256,8(%esp)
	call	memset
	addl	$12,%esp

	movl	16(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	10340
	movl	$0,%eax
# fstack_pushFile_reltrue_48	:	 [@10340]
	testl	%eax,%eax
	jnz	10343
	jmp	10365
# fstack_pushFile_ifbl_47	:	 [@10343]

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,8(%esp)
	call	10120
	addl	$12,%esp
	movl	%eax,-8(%ebp)

	movl	-8(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	10359
	movl	$0,%eax
# fstack_pushFile_reltrue_50	:	 [@10359]
	testl	%eax,%eax
	jnz	10362
	jmp	10364
# fstack_pushFile_ifbl_49	:	 [@10362]

	movl	-8(%ebp),%eax
	jmp	10685
# fstack_pushFile_elsebl_49	:	 [@10364]
# fstack_pushFile_endif_49	:	 [@10364]
	jmp	10537
# fstack_pushFile_elsebl_47	:	 [@10365]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	jne	10379
	movl	$0,%eax
# fstack_pushFile_reltrue_52	:	 [@10379]
	testl	%eax,%eax
	jnz	10382
	jmp	10502
# fstack_pushFile_ifbl_51	:	 [@10382]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	movl	%eax,-276(%ebp)

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-276,%eax
	movl	(%eax),%eax
	addl	$17,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	11051
	addl	$8,%esp
	movl	%eax,-272(%ebp)

	subl	$4,%esp
	movl	-272(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)

# fstack_pushFile_while_53	:	 [@10417]
	movl	-12(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jge	10422
	movl	$0,%eax
# fstack_pushFile_reltrue_55	:	 [@10422]
	testl	%eax,%eax
	jz	10441
	pushl	-12(%ebp)
	movl	%ebp,%eax
	addl	$-272,%eax
	movl	(%eax),%eax
	popl	%esi
	addl	%esi,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$47,%ebx
	movl	$1,%eax
	jne	10437
	movl	$0,%eax
# fstack_pushFile_reltrue_56	:	 [@10437]
	testl	%eax,%eax
	jz	10441
	movl	$1,%eax
	jmp	10442
# fstack_pushFile_logtermfalse_54	:	 [@10441]
	movl	$0,%eax
# fstack_pushFile_logtermtrue_54	:	 [@10442]
	testl	%eax,%eax
	jz	10449

	movl	-12(%ebp),%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)
	jmp	10417
# fstack_pushFile_endwhile_53	:	 [@10449]

	movl	-12(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-12(%ebp)

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,0(%esp)
	movl	-272(%ebp),%eax
	movl	%eax,4(%esp)
	movl	-12(%ebp),%eax
	movl	%eax,8(%esp)
	call	strncpy
	addl	$12,%esp

	pushl	-12(%ebp)
	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	popl	%ebx
	addl	%eax,%ebx
	movl	%ebx,%eax
	movl	%eax,%ebx
	cmpl	$256,%ebx
	movl	$1,%eax
	jge	10477
	movl	$0,%eax
# fstack_pushFile_reltrue_58	:	 [@10477]
	testl	%eax,%eax
	jnz	10480
	jmp	10493
# fstack_pushFile_ifbl_57	:	 [@10480]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12388,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10501,%ebx
	movl	%ebx,%eax
	jmp	10685
# fstack_pushFile_elsebl_57	:	 [@10493]
# fstack_pushFile_endif_57	:	 [@10493]

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	strcat
	addl	$8,%esp
	jmp	10537
# fstack_pushFile_elsebl_51	:	 [@10502]

	subl	$4,%esp
	movl	12(%ebp),%eax
	movl	%eax,0(%esp)
	call	strlen
	addl	$4,%esp
	movl	%eax,%ebx
	cmpl	$256,%ebx
	movl	$1,%eax
	jge	10512
	movl	$0,%eax
# fstack_pushFile_reltrue_60	:	 [@10512]
	testl	%eax,%eax
	jnz	10515
	jmp	10528
# fstack_pushFile_ifbl_59	:	 [@10515]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12388,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10501,%ebx
	movl	%ebx,%eax
	jmp	10685
# fstack_pushFile_elsebl_59	:	 [@10528]
# fstack_pushFile_endif_59	:	 [@10528]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$256,8(%esp)
	call	memcpy
	addl	$12,%esp
# fstack_pushFile_endif_51	:	 [@10537]
# fstack_pushFile_endif_47	:	 [@10537]

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	10021
	addl	$8,%esp
	movl	%eax,%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	je	10549
	movl	$0,%eax
# fstack_pushFile_reltrue_62	:	 [@10549]
	testl	%eax,%eax
	jnz	10552
	jmp	10554
# fstack_pushFile_ifbl_61	:	 [@10552]

	movl	$0,%eax
	jmp	10685
# fstack_pushFile_elsebl_61	:	 [@10554]
# fstack_pushFile_endif_61	:	 [@10554]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,%ebx
	cmpl	$20,%ebx
	movl	$1,%eax
	je	10567
	movl	$0,%eax
# fstack_pushFile_reltrue_64	:	 [@10567]
	testl	%eax,%eax
	jnz	10570
	jmp	10582
# fstack_pushFile_ifbl_63	:	 [@10570]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12475,4(%esp)
	movl	$0,8(%esp)
	movl	$2,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10001,%ebx
	movl	%ebx,%eax
	jmp	10685
# fstack_pushFile_elsebl_63	:	 [@10582]
# fstack_pushFile_endif_63	:	 [@10582]

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$0,8(%esp)
	call	open
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	pushl	-4(%ebp)
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	10600
	movl	$0,%eax
# fstack_pushFile_reltrue_66	:	 [@10600]
	testl	%eax,%eax
	jnz	10603
	jmp	10617
# fstack_pushFile_ifbl_65	:	 [@10603]

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12494,4(%esp)
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp

	movl	$0,%ebx
	subl	$10500,%ebx
	movl	%ebx,%eax
	jmp	10685
# fstack_pushFile_elsebl_65	:	 [@10617]
# fstack_pushFile_endif_65	:	 [@10617]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	movl	%eax,-276(%ebp)

	movl	%ebp,%eax
	addl	$-276,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	-4(%ebp),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-276,%eax
	movl	(%eax),%eax
	addl	$21,%eax
	movl	%eax,%ebx
	movl	$1,(%ebx)

	movl	%ebp,%eax
	addl	$-276,%eax
	movl	(%eax),%eax
	addl	$25,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-276,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$13,8(%esp)
	call	memset
	addl	$12,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-268,%eax
	movl	%eax,4(%esp)
	call	9861
	addl	$8,%esp
	jmp	10685
# fstack_pushFile_ret	:	 [@10685]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	fstack_getNext [@10688]
# .type	fstack_getNext,@function
# fstack_getNext	:	 [@10688]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$8,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	movl	%eax,-8(%ebp)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jge	10715
	movl	$0,%eax
# fstack_getNext_reltrue_69	:	 [@10715]
	testl	%eax,%eax
	jz	10735
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	10731
	movl	$0,%eax
# fstack_getNext_reltrue_70	:	 [@10731]
	testl	%eax,%eax
	jz	10735
	movl	$1,%eax
	jmp	10736
# fstack_getNext_logtermfalse_68	:	 [@10735]
	movl	$0,%eax
# fstack_getNext_logtermtrue_68	:	 [@10736]
	testl	%eax,%eax
	jnz	10739
	jmp	10743
# fstack_getNext_ifbl_67	:	 [@10739]

	movl	$0,%ebx
	subl	$10000,%ebx
	movl	%ebx,%eax
	jmp	11048
# fstack_getNext_elsebl_67	:	 [@10743]
# fstack_getNext_endif_67	:	 [@10743]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$0,(%ebx)

	movl	$0,-4(%ebp)

# fstack_getNext_while_71	:	 [@10750]
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	10761
	movl	$0,%eax
# fstack_getNext_reltrue_73	:	 [@10761]
	testl	%eax,%eax
	jz	10777
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jge	10773
	movl	$0,%eax
# fstack_getNext_reltrue_74	:	 [@10773]
	testl	%eax,%eax
	jz	10777
	movl	$1,%eax
	jmp	10778
# fstack_getNext_logtermfalse_72	:	 [@10777]
	movl	$0,%eax
# fstack_getNext_logtermtrue_72	:	 [@10778]
	testl	%eax,%eax
	jz	10917

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,4(%esp)
	movl	$1,8(%esp)
	call	read
	addl	$12,%esp
	movl	%eax,-4(%ebp)

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jg	10801
	movl	$0,%eax
# fstack_getNext_reltrue_76	:	 [@10801]
	testl	%eax,%eax
	jnz	10804
	jmp	10805
# fstack_getNext_ifbl_75	:	 [@10804]
	jmp	10917
# fstack_getNext_elsebl_75	:	 [@10805]
# fstack_getNext_endif_75	:	 [@10805]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,0(%esp)
	call	close
	addl	$4,%esp

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	jne	10836
	movl	$0,%eax
# fstack_getNext_reltrue_78	:	 [@10836]
	testl	%eax,%eax
	jnz	10839
	jmp	10866
# fstack_getNext_ifbl_77	:	 [@10839]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movb	$10,(%ebx)

	movl	$1,-4(%ebp)

	subl	$16,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$12517,4(%esp)
	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$17,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	11051
	addl	$8,%esp
	movl	%eax,8(%esp)
	movl	$1,12(%esp)
	call	232
	addl	$16,%esp
	jmp	10866
# fstack_getNext_elsebl_77	:	 [@10866]
# fstack_getNext_endif_77	:	 [@10866]

	subl	$12,%esp
	movl	-8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	movl	$29,8(%esp)
	call	memset
	addl	$12,%esp

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jl	10898
	movl	$0,%eax
# fstack_getNext_reltrue_80	:	 [@10898]
	testl	%eax,%eax
	jnz	10901
	jmp	10902
# fstack_getNext_ifbl_79	:	 [@10901]
	jmp	10917
# fstack_getNext_elsebl_79	:	 [@10902]
# fstack_getNext_endif_79	:	 [@10902]

	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	popl	%esi
	imull	$29,%esi
	addl	%esi,%eax
	movl	%eax,-8(%ebp)
	jmp	10750
# fstack_getNext_endwhile_71	:	 [@10917]

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	je	10922
	movl	$0,%eax
# fstack_getNext_reltrue_83	:	 [@10922]
	testl	%eax,%eax
	jz	10942
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$588,%eax
	movl	(%eax),%eax
	pushl	%eax
	movl	$0,%ebx
	subl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	cmpl	%eax,%ebx
	movl	$1,%eax
	je	10938
	movl	$0,%eax
# fstack_getNext_reltrue_84	:	 [@10938]
	testl	%eax,%eax
	jz	10942
	movl	$1,%eax
	jmp	10943
# fstack_getNext_logtermfalse_82	:	 [@10942]
	movl	$0,%eax
# fstack_getNext_logtermtrue_82	:	 [@10943]
	testl	%eax,%eax
	jnz	10946
	jmp	10948
# fstack_getNext_ifbl_81	:	 [@10946]

	movl	$1,%eax
	jmp	11048
# fstack_getNext_elsebl_81	:	 [@10948]
# fstack_getNext_endif_81	:	 [@10948]

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$25,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$25,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,%ebx
	cmpl	$10,%ebx
	movl	$1,%eax
	je	10974
	movl	$0,%eax
# fstack_getNext_reltrue_86	:	 [@10974]
	testl	%eax,%eax
	jnz	10977
	jmp	10999
# fstack_getNext_ifbl_85	:	 [@10977]

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$21,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$21,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$25,%eax
	movl	%eax,%ebx
	movl	$0,(%ebx)
	jmp	10999
# fstack_getNext_elsebl_85	:	 [@10999]
# fstack_getNext_endif_85	:	 [@10999]

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$1,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$17,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$5,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$21,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	movl	%ebp,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	addl	$9,%eax
	pushl	%eax
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$25,%eax
	movl	(%eax),%eax
	popl	%ebx
	movl	%eax,(%ebx)

	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-8,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$13,8(%esp)
	call	memcpy
	addl	$12,%esp

	movl	$0,%eax
	jmp	11048
# fstack_getNext_ret	:	 [@11048]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	fstack_getFilename [@11051]
# .type	fstack_getFilename,@function
# fstack_getFilename	:	 [@11051]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$8,%eax
	movl	(%eax),%eax
	addl	$580,%eax
	movl	%eax,0(%esp)
	call	9126
	addl	$4,%esp
	movl	%eax,-4(%ebp)

# fstack_getFilename_while_87	:	 [@11063]
	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	11068
	movl	$0,%eax
# fstack_getFilename_reltrue_88	:	 [@11068]
	testl	%eax,%eax
	jz	11095

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	12(%ebp),%ebx
	movl	$1,%eax
	je	11080
	movl	$0,%eax
# fstack_getFilename_reltrue_90	:	 [@11080]
	testl	%eax,%eax
	jnz	11083
	jmp	11088
# fstack_getFilename_ifbl_89	:	 [@11083]

	movl	%ebp,%eax
	addl	$-4,%eax
	movl	(%eax),%eax
	addl	$4,%eax
	jmp	11097
# fstack_getFilename_elsebl_89	:	 [@11088]
# fstack_getFilename_endif_89	:	 [@11088]

	subl	$4,%esp
	movl	-4(%ebp),%eax
	movl	%eax,0(%esp)
	call	9150
	addl	$4,%esp
	movl	%eax,-4(%ebp)
	jmp	11063
# fstack_getFilename_endwhile_87	:	 [@11095]

	movl	$0,%eax
	jmp	11097
# fstack_getFilename_ret	:	 [@11097]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	preproc_create [@11100]
# .type	preproc_create,@function
# preproc_create	:	 [@11100]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	9653
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	8548
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	3158
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	5610
	addl	$4,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$0,8(%esp)
	call	10324
	addl	$12,%esp
	jmp	11132
# preproc_create_ret	:	 [@11132]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	preproc_destroy [@11135]
# .type	preproc_destroy,@function
# preproc_destroy	:	 [@11135]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	5653
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	3198
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	8564
	addl	$4,%esp

	subl	$4,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	call	9679
	addl	$4,%esp
# preproc_destroy_ret	:	 [@11158]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	preproc_getNext [@11161]
# .type	preproc_getNext,@function
# preproc_getNext	:	 [@11161]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$12,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	movl	12(%ebp),%eax
	movl	%eax,8(%esp)
	call	701
	addl	$12,%esp
	jmp	11173
# preproc_getNext_ret	:	 [@11173]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	preproc_getFilename [@11176]
# .type	preproc_getFilename,@function
# preproc_getFilename	:	 [@11176]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	11051
	addl	$8,%esp
	jmp	11187
# preproc_getFilename_ret	:	 [@11187]
	movl	%ebp,%esp
	popl	%ebp
	ret	

# .globl	preproc_addDefine [@11190]
# .type	preproc_addDefine,@function
# preproc_addDefine	:	 [@11190]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$8,%esp
	movl	8(%ebp),%eax
	movl	%eax,0(%esp)
	movl	12(%ebp),%eax
	movl	%eax,4(%esp)
	call	5760
	addl	$8,%esp
	jmp	11201
# preproc_addDefine_ret	:	 [@11201]
	movl	%ebp,%esp
	popl	%ebp
	ret	


# .globl	main [@11204]
# .type	main,@function
# main	:	 [@11204]
	pushl	%ebp
	movl	%esp,%ebp
	subl	$20749,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	$12548,4(%esp)
	call	11100
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	$12584,4(%esp)
	call	11190
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	movl	%eax,4(%esp)
	call	11161
	addl	$8,%esp
	movl	%eax,-4(%ebp)

# main_while_0	:	 [@11231]
	movl	-4(%ebp),%ebx
	cmpl	$1,%ebx
	movl	$1,%eax
	jne	11236
	movl	$0,%eax
# main_reltrue_1	:	 [@11236]
	testl	%eax,%eax
	jz	11323

	movl	-4(%ebp),%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jne	11243
	movl	$0,%eax
# main_reltrue_3	:	 [@11243]
	testl	%eax,%eax
	jnz	11246
	jmp	11302
# main_ifbl_2	:	 [@11246]

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$1,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	11176
	addl	$8,%esp
	movl	%eax,-21(%ebp)

	subl	$8,%esp
	movl	$12594,0(%esp)
	movl	-4(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$12620,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$1,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$12629,0(%esp)
	movl	-21(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$12634,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$5,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$12648,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$9,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	$0,0(%esp)
	call	exit
	addl	$4,%esp
	jmp	11302
# main_elsebl_2	:	 [@11302]
# main_endif_2	:	 [@11302]

	subl	$8,%esp
	movl	$12662,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	addl	$0,%eax
	movb	(%eax),%al
	movsbl	%al,%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-17,%eax
	movl	%eax,4(%esp)
	call	11161
	addl	$8,%esp
	movl	%eax,-4(%ebp)
	jmp	11231
# main_endwhile_0	:	 [@11323]

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	call	11135
	addl	$4,%esp

	movl	$0,%eax
	jmp	11331
# main_ret	:	 [@11331]
	movl	%ebp,%esp
	popl	%ebp
	ret	


.section .data

# symtab	:	 [@11334]
.string	"PREPROC_WARNING: %s "
.string	"PREPROC_ERROR: %s "
.string	"[%s:"
.string	"%d:"
.string	"%d] {"
.string	"[ERR filename:%d:"
.string	"%c"
.string	"}"
.string	"PREPROC_WARNING%s "
.string	":"
.string	"PREPROC_ERROR%s "
.string	""
.string	"prevstage_getNextChar failed"
.string	"Sourceline too long"
.string	"Could not allocate new memory"
.string	"Found invalid formated macro statement (check parameters)"
.string	"Found invalid macro statement..."
# symtab	:	 [@11621]
.string	"##"
.string	"Missformed macro (::parameters list::) call found"
.string	"Missformed macro (::parameters count::) call found"
# symtab	:	 [@11725]
.string	"Could not allocate new memory"
.string	"Manually added macro - name already defined!"
.string	"include"
.string	"define"
.string	"ifdef"
.string	"ifndef"
.string	"else"
.string	"endif"
.string	"Found invalid include directive"
.string	"Found filename exceeds MAX_FILENAME_LENGTH"
.string	"Found invalid macro name beginning"
.string	"Macro already defined"
.string	"Found invalid define statement"
.string	"Detected wrong directive-branch-nesting (ELSE)"
.string	"Detected wrong directive-branch-nesting (ENDIF)"
.string	"Detected wrong directive-branch-nesting"
.string	"Detected wrong directive-branch-nesting (missing some [else|endif] statement?)"
.string	"Found invalid/incomplete ifdef directive"
.string	"Found invalid/incomplete ifndef directive"
.string	"Found invalid/incomplete preprocessor directive"
# symtab	:	 [@12347]
# symtab	:	 [@12347]
.string	"../include"
.string	"Could not allocate new memory"
.string	"Found filename [%s] exceeds MAX_FILENAME_LENGTH"
.string	"Could not find system-include for [%s]"
.string	"Filestack exceeded"
.string	"Could not include [%s]"
.string	"No newline at end of file [%s]"
# symtab	:	 [@12548]
# symtab	:	 [@12548]
.string	"../symbolTable/test-symbolTable.cpp"
.string	"__HRWCC__"
.string	"\n       EXIT-STATUS: [%d]"
.string	" in [%d]"
.string	"[%s]"
.string	" on line [%d]"
.string	" column [%d]\n"
.string	"%c"
