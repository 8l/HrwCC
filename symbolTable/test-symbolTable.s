
.section	.text

.globl	test_Sizeof
.type	test_Sizeof,@function
test_Sizeof	:	
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21521,%esp

	subl	$4,%esp
	movl	$symtab+0,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+17,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	movl	$symtab+35,4(%esp)
	call	preproc_create
	addl	$8,%esp
	testl	%eax,%eax
	jnz	test_Sizeof_ifbl_0
	jmp	test_Sizeof_elsebl_0
test_Sizeof_ifbl_0	:	

	jmp	test_Sizeof_ret
test_Sizeof_elsebl_0	:	
test_Sizeof_endif_0	:	

	subl	$4,%esp
	movl	$symtab+53,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,4(%esp)
	call	scanner_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+69,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,4(%esp)
	call	parser_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+84,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,4(%esp)
	call	symbol_CreateSymbolTable
	addl	$8,%esp

	subl	$0,%esp
	call	syntax_CreateTreeNode
	addl	$0,%esp
	movl	%eax,-21365(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	-21365(%ebp),%eax
	movl	%eax,4(%esp)
	call	parser_buildSyntaxTree
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-21345,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jg	test_Sizeof_reltrue_2
	movl	$0,%eax
test_Sizeof_reltrue_2	:	
	testl	%eax,%eax
	jnz	test_Sizeof_ifbl_1
	jmp	test_Sizeof_elsebl_1
test_Sizeof_ifbl_1	:	

	subl	$8,%esp
	movl	$symtab+108,0(%esp)
	movl	%ebp,%eax
	addl	$-21345,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	jmp	test_Sizeof_ret
test_Sizeof_elsebl_1	:	
test_Sizeof_endif_1	:	

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineStruct
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineStruct
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$5,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$6,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$7,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$8,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$9,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineGlobalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$10,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineFunction
	addl	$8,%esp

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$5,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$6,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineLocalVariable
	addl	$8,%esp

	subl	$8,%esp
	movl	-21369(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$7,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	-21373(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21373(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineString
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+129,0(%esp)
	movl	%ebp,%eax
	addl	$-21373,%eax
	movl	(%eax),%eax
	addl	$8,%eax
	addl	$16,%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+139,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_Sizeof_String
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$0,%eax
	movl	%eax,%ebx
	movl	$43,(%ebx)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+145,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindVariable
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+147,0(%esp)
	movl	%ebp,%eax
	addl	$-21521,%eax
	movl	(%eax),%eax
	addl	$144,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+174,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindStruct
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+183,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+185,0(%esp)
	subl	$152,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21521(%ebp),%eax
	movl	%eax,4(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$8,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_GetOffsetInStruct
	addl	$152,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+218,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindGlobalVariable
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+220,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21521(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetGlobalOffset
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+218,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindNonGlobalVariable
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+250,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21521(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetNonGlobalOffset
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+284,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindNonGlobalVariable
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+287,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21521(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetNonGlobalOffset
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+322,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindString
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+330,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21521(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetGlobalOffset
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+366,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_printTable
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+381,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_ClearNonGlobalVariables
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+366,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_printTable
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21517,%eax
	addl	$16,%eax
	movl	%eax,0(%esp)
	movl	$symtab+145,4(%esp)
	call	strcpy
	addl	$8,%esp

	subl	$148,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21517,%eax
	movl	%esp,%ebx
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	movl	(%eax),%ecx
	movl	%ecx,(%ebx)
	addl	$4,%eax
	addl	$4,%ebx
	call	symbol_FindVariable
	addl	$148,%esp
	movl	%eax,-21521(%ebp)

	subl	$8,%esp
	movl	$symtab+147,0(%esp)
	movl	%ebp,%eax
	addl	$-21521,%eax
	movl	(%eax),%eax
	addl	$144,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+400,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	call	syntax_FreeSyntaxTree
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	call	preproc_destroy
	addl	$4,%esp
test_Sizeof_ret	:	
	movl	%ebp,%esp
	popl	%ebp
	ret	

.globl	test_Functions
.type	test_Functions,@function
test_Functions	:	
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21369,%esp

	subl	$4,%esp
	movl	$symtab+432,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+17,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	movl	$symtab+452,4(%esp)
	call	preproc_create
	addl	$8,%esp
	testl	%eax,%eax
	jnz	test_Functions_ifbl_3
	jmp	test_Functions_elsebl_3
test_Functions_ifbl_3	:	

	jmp	test_Functions_ret
test_Functions_elsebl_3	:	
test_Functions_endif_3	:	

	subl	$4,%esp
	movl	$symtab+53,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,4(%esp)
	call	scanner_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+69,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,4(%esp)
	call	parser_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+84,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,4(%esp)
	call	symbol_CreateSymbolTable
	addl	$8,%esp

	subl	$0,%esp
	call	syntax_CreateTreeNode
	addl	$0,%esp
	movl	%eax,-21365(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	-21365(%ebp),%eax
	movl	%eax,4(%esp)
	call	parser_buildSyntaxTree
	addl	$8,%esp

	movl	%ebp,%eax
	addl	$-21345,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	movl	%eax,%ebx
	cmpl	$0,%ebx
	movl	$1,%eax
	jg	test_Functions_reltrue_5
	movl	$0,%eax
test_Functions_reltrue_5	:	
	testl	%eax,%eax
	jnz	test_Functions_ifbl_4
	jmp	test_Functions_elsebl_4
test_Functions_ifbl_4	:	

	subl	$8,%esp
	movl	$symtab+473,0(%esp)
	movl	%ebp,%eax
	addl	$-21345,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	jmp	test_Functions_ret
test_Functions_elsebl_4	:	
test_Functions_endif_4	:	

	subl	$4,%esp
	movl	$symtab+501,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$0,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineStruct
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$1,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+538,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$3,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+557,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetReturnType
	addl	$8,%esp
	movl	%eax,0(%esp)
	call	syntax_printTree
	addl	$4,%esp

	subl	$8,%esp
	movl	$symtab+570,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_CountFunctionArgs
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$0,8(%esp)
	call	symbol_GetFunctionArg
	addl	$12,%esp
	movl	%eax,0(%esp)
	call	syntax_printTree
	addl	$4,%esp

	subl	$8,%esp
	movl	$symtab+587,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_CountFunctionArgs
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$1,8(%esp)
	call	symbol_GetFunctionArg
	addl	$12,%esp
	movl	%eax,0(%esp)
	call	syntax_printTree
	addl	$4,%esp

	subl	$8,%esp
	movl	$symtab+604,0(%esp)
	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_CountFunctionArgs
	addl	$8,%esp
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	subl	$12,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	movl	$2,8(%esp)
	call	symbol_GetFunctionArg
	addl	$12,%esp
	movl	%eax,0(%esp)
	call	syntax_printTree
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+538,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$4,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+538,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$5,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DefineFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$6,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$7,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$8,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+518,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	movl	$9,4(%esp)
	call	syntax_GetChild
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21369(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_DeclareFunction
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+366,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_printTable
	addl	$4,%esp

	subl	$8,%esp
	movl	$symtab+621,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	call	syntax_FreeSyntaxTree
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	call	preproc_destroy
	addl	$4,%esp
test_Functions_ret	:	
	movl	%ebp,%esp
	popl	%ebp
	ret	

.globl	test_parser
.type	test_parser,@function
test_parser	:	
	pushl	%ebp
	movl	%esp,%ebp
	subl	$21377,%esp

	subl	$4,%esp
	movl	$symtab+654,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	$symtab+17,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	movl	$symtab+682,4(%esp)
	call	preproc_create
	addl	$8,%esp
	testl	%eax,%eax
	jnz	test_parser_ifbl_6
	jmp	test_parser_elsebl_6
test_parser_ifbl_6	:	

	jmp	test_parser_ret
test_parser_elsebl_6	:	
test_parser_endif_6	:	

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	movl	$symtab+699,4(%esp)
	call	preproc_addDefine
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+53,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,4(%esp)
	call	scanner_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+69,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-20749,%eax
	movl	%eax,4(%esp)
	call	parser_init
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+709,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,4(%esp)
	call	symbol_CreateSymbolTable
	addl	$8,%esp

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,4(%esp)
	call	parser_setSymbolTable
	addl	$8,%esp

	subl	$0,%esp
	call	syntax_CreateTreeNode
	addl	$0,%esp
	movl	%eax,-21365(%ebp)

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21345,%eax
	movl	%eax,0(%esp)
	movl	-21365(%ebp),%eax
	movl	%eax,4(%esp)
	call	parser_buildSyntaxTree
	addl	$8,%esp

	subl	$4,%esp
	movl	$symtab+732,0(%esp)
	call	puts
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_printTable
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_CountFunctions
	addl	$4,%esp
	movl	%eax,-21377(%ebp)

	movl	$0,-21373(%ebp)

test_parser_while_7	:	
	movl	-21373(%ebp),%ebx
	cmpl	-21377(%ebp),%ebx
	movl	$1,%eax
	jl	test_parser_reltrue_8
	movl	$0,%eax
test_parser_reltrue_8	:	
	testl	%eax,%eax
	jz	test_parser_endwhile_7

	subl	$8,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	symbol_GetFunction
	addl	$8,%esp
	movl	%eax,-21369(%ebp)

	subl	$8,%esp
	movl	$symtab+750,0(%esp)
	movl	-21373(%ebp),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+762,0(%esp)
	movl	%ebp,%eax
	addl	$-21369,%eax
	movl	(%eax),%eax
	addl	$0,%eax
	addl	$16,%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	movl	-21373(%ebp),%ebx
	addl	$1,%ebx
	movl	%ebx,%eax
	movl	%eax,-21373(%ebp)
	jmp	test_parser_while_7
test_parser_endwhile_7	:	

	subl	$8,%esp
	movl	$symtab+768,0(%esp)
	movl	%ebp,%eax
	addl	$-21345,%eax
	addl	$12,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$8,%esp
	movl	$symtab+797,0(%esp)
	movl	%ebp,%eax
	addl	$-21361,%eax
	addl	$4,%eax
	movl	(%eax),%eax
	movl	%eax,4(%esp)
	call	printf
	addl	$8,%esp

	subl	$4,%esp
	movl	-21365(%ebp),%eax
	movl	%eax,0(%esp)
	call	syntax_FreeSyntaxTree
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-21361,%eax
	movl	%eax,0(%esp)
	call	symbol_destroy
	addl	$4,%esp

	subl	$4,%esp
	movl	%ebp,%eax
	addl	$-20728,%eax
	movl	%eax,0(%esp)
	call	preproc_destroy
	addl	$4,%esp
test_parser_ret	:	
	movl	%ebp,%esp
	popl	%ebp
	ret	

.globl	main
.type	main,@function
main	:	
	pushl	%ebp
	movl	%esp,%ebp
	subl	$0,%esp

	subl	$0,%esp
	call	test_parser
	addl	$0,%esp

	movl	$0,%eax
	jmp	main_ret
main_ret	:	
	movl	%ebp,%esp
	popl	%ebp
	ret	

.section	.data
symtab	:	
.string	"\n\nTest sizeof.c\n"
.string	"Create preproc..."
.string	"testdata/sizeof.c"
.string	"Init scanner..."
.string	"Init parser..."
.string	"Create symbol table...\n"
.string	"Detected %d errors.\n"
.string	"Sizeof %s"
.string	": %d\n"
.string	"a"
.string	"\nType of variable \"a\": %d\n"
.string	"mystruct"
.string	"c"
.string	"Offset of 'c' in 'mystruct': %d\n"
.string	"b"
.string	"Offset of 'b' in globals: %d\n"
.string	"Offset of 'b' in non-globals: %d\n"
.string	"p2"
.string	"Offset of 'p2' in non-globals: %d\n"
.string	"\"hello\""
.string	"Offset of '\"hello\"' in globals: %d\n"
.string	"\nSymbol table:"
.string	"\nClear non-globals"
.string	"\nEnded with %d symtable erros.\n"
.string	"\n\nTest functions.c\n"
.string	"testdata/functions.c"
.string	"Detected %d parser errors.\n"
.string	"define struct..."
.string	"declare function..."
.string	"define function..."
.string	"Return type:"
.string	"Arguments 1/%d:\n"
.string	"Arguments 2/%d:\n"
.string	"Arguments 3/%d:\n"
.string	"\nEnded with %d symtable errors.\n"
.string	"\n\nTest input.c with parser\n"
.string	"testdata/input.c"
.string	"__HRWCC__"
.string	"Create symbol table..."
.string	"\nAfter parsing..."
.string	"Function %d"
.string	": %s\n"
.string	"\nDetected %d parser errors.\n"
.string	"Detected %d symbol errors.\n"
